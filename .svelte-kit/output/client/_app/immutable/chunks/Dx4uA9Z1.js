var k=Object.defineProperty;var j=(i,e,t)=>e in i?k(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var n=(i,e,t)=>j(i,typeof e!="symbol"?e+"":e,t);import{w as D}from"./DGNC1kIF.js";class u{constructor(e){n(this,"id");n(this,"name");n(this,"description");n(this,"assignee");n(this,"status");n(this,"priority");n(this,"startDate");n(this,"endDate");n(this,"progress");n(this,"projectId");n(this,"dependencies");n(this,"color");this.id=e.id||this.generateId(),this.name=e.name,this.description=e.description,this.assignee=e.assignee,this.status=e.status,this.priority=e.priority,this.startDate=e.startDate,this.endDate=e.endDate,this.progress=e.progress,this.projectId=e.projectId,this.dependencies=e.dependencies||[],this.color=e.color}generateId(){return`task-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}update(e){return Object.assign(this,e),this}setProgress(e){return this.progress=Math.max(0,Math.min(100,e)),e===100&&this.status!=="completed"?this.status="completed":e>0&&this.status==="planned"&&(this.status="in-progress"),this}setStatus(e){return this.status=e,e==="completed"&&this.progress<100?this.progress=100:e==="planned"&&this.progress>0&&(this.progress=0),this}isInDateRange(e,t){const s=new Date(this.startDate),r=new Date(this.endDate);return s<=t&&r>=e}isToday(){const e=new Date,t=new Date(this.startDate),s=new Date(this.endDate);return t<=e&&s>=e}isOverdue(){const e=new Date;return new Date(this.endDate)<e&&this.status!=="completed"}toJSON(){return{id:this.id,name:this.name,description:this.description,assignee:this.assignee,status:this.status,priority:this.priority,startDate:this.startDate,endDate:this.endDate,progress:this.progress,projectId:this.projectId,dependencies:this.dependencies,color:this.color}}clone(){return new u(this.toJSON())}}class l{constructor(e){n(this,"id");n(this,"name");n(this,"email");n(this,"role");n(this,"avatar");n(this,"department");n(this,"joinDate");this.id=e.id||this.generateId(),this.name=e.name,this.email=e.email,this.role=e.role,this.avatar=e.avatar,this.department=e.department,this.joinDate=e.joinDate}generateId(){return`member-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}update(e){return Object.assign(this,e),this}getInitials(){return this.name.split(" ").map(e=>e.charAt(0)).join("").toUpperCase().slice(0,2)}getWorkingMonths(){const e=new Date(this.joinDate),s=Math.abs(new Date().getTime()-e.getTime());return Math.ceil(s/(1e3*60*60*24*30))}getWorkingPeriodText(){const e=this.getWorkingMonths();if(e<12)return`${e}개월`;{const t=Math.floor(e/12),s=e%12;return s>0?`${t}년 ${s}개월`:`${t}년`}}isValidEmail(){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(this.email)}getRoleBadgeColor(){return this.role.includes("개발자")?"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200":this.role.includes("디자이너")?"bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200":this.role.includes("매니저")?"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200":this.role.includes("QA")?"bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200":"bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200"}toJSON(){return{id:this.id,name:this.name,email:this.email,role:this.role,avatar:this.avatar,department:this.department,joinDate:this.joinDate}}clone(){return new l(this.toJSON())}}class p{constructor(e){n(this,"id");n(this,"name");n(this,"description");n(this,"status");n(this,"startDate");n(this,"endDate");n(this,"_tasks",[]);n(this,"_members",[]);this.id=e.id||this.generateId(),this.name=e.name,this.description=e.description,this.status=e.status,this.startDate=e.startDate,this.endDate=e.endDate,e.tasks&&(this._tasks=e.tasks.map(t=>new u(t))),e.members&&(this._members=e.members.map(t=>new l(t)))}generateId(){return`project-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}get tasks(){return[...this._tasks]}get members(){return[...this._members]}update(e){return e.name&&(this.name=e.name),e.description&&(this.description=e.description),e.status&&(this.status=e.status),e.startDate&&(this.startDate=e.startDate),e.endDate&&(this.endDate=e.endDate),this}addTask(e){const t=new u({...e,projectId:this.id});return this._tasks.push(t),t}updateTask(e,t){const s=this._tasks.find(r=>r.id===e);return s?(s.update(t),s):null}deleteTask(e){const t=this._tasks.findIndex(s=>s.id===e);return t!==-1?(this._tasks.splice(t,1),!0):!1}getTaskById(e){return this._tasks.find(t=>t.id===e)||null}getTasksByStatus(e){return this._tasks.filter(t=>t.status===e)}getTasksByAssignee(e){return this._tasks.filter(t=>t.assignee===e)}getTasksInDateRange(e,t){return this._tasks.filter(s=>s.isInDateRange(e,t))}addMember(e){const t=new l(e);return this._members.push(t),t}updateMember(e,t){const s=this._members.find(r=>r.id===e);return s?(s.update(t),s):null}deleteMember(e){const t=this._members.findIndex(s=>s.id===e);return t!==-1?(this._members.splice(t,1),!0):!1}getMemberById(e){return this._members.find(t=>t.id===e)||null}getMemberByName(e){return this._members.find(t=>t.name===e)||null}getMembersByDepartment(e){return this._members.filter(t=>t.department===e)}getStats(){const e=this._tasks.length,t=this.getTasksByStatus("completed").length,s=this.getTasksByStatus("in-progress").length,r=this.getTasksByStatus("planned").length,d=this.getTasksByStatus("on-hold").length,a=this._tasks.filter(o=>o.isOverdue()).length,c=e>0?Math.round(t/e*100):0,g=this._members.reduce((o,h)=>{const f=h.department||"기타";return o[f]=(o[f]||0)+1,o},{});return{totalTasks:e,completedTasks:t,inProgressTasks:s,plannedTasks:r,onHoldTasks:d,overdueTasks:a,completionRate:c,totalMembers:this._members.length,departmentCounts:g}}getOverallProgress(){if(this._tasks.length===0)return 0;const e=this._tasks.reduce((t,s)=>t+s.progress,0);return Math.round(e/this._tasks.length)}getDaysUntilDeadline(){if(!this.endDate)return null;const e=new Date,s=new Date(this.endDate).getTime()-e.getTime();return Math.ceil(s/(1e3*60*60*24))}toJSON(){return{id:this.id,name:this.name,description:this.description,status:this.status,startDate:this.startDate,endDate:this.endDate,tasks:this._tasks.map(e=>e.toJSON()),members:this._members.map(e=>e.toJSON())}}clone(){return new p(this.toJSON())}}class b{constructor(e){n(this,"_projects",[]);n(this,"_store");e&&(this._projects=e.map(t=>new p(t))),this._store=D(this._projects)}get store(){return this._store}get projects(){return[...this._projects]}updateStore(){this._store.set([...this._projects])}createProject(e){const t=new p(e);return this._projects.push(t),this.updateStore(),t}getProjectById(e){return this._projects.find(t=>t.id===e)||null}updateProject(e,t){const s=this.getProjectById(e);return s?(s.update(t),this.updateStore(),s):null}deleteProject(e){const t=this._projects.findIndex(s=>s.id===e);return t!==-1?(this._projects.splice(t,1),this.updateStore(),!0):!1}addTask(e,t){const s=this.getProjectById(e);if(s){const r=s.addTask(t);return this.updateStore(),r}return null}updateTask(e,t){for(const s of this._projects){const r=s.updateTask(e,t);if(r)return this.updateStore(),r}return null}deleteTask(e){for(const t of this._projects)if(t.deleteTask(e))return this.updateStore(),!0;return!1}getTaskById(e){for(const t of this._projects){const s=t.getTaskById(e);if(s)return{task:s,project:t}}return null}addMember(e,t){const s=this.getProjectById(e);if(s){const r=s.addMember(t);return this.updateStore(),r}return null}updateMember(e,t){for(const s of this._projects){const r=s.updateMember(e,t);if(r)return this.updateStore(),r}return null}deleteMember(e){for(const t of this._projects)if(t.deleteMember(e))return this.updateStore(),!0;return!1}getMemberById(e){for(const t of this._projects){const s=t.getMemberById(e);if(s)return{member:s,project:t}}return null}searchProjects(e){const t=e.toLowerCase();return this._projects.filter(s=>s.name.toLowerCase().includes(t)||s.description.toLowerCase().includes(t))}getProjectsByStatus(e){return this._projects.filter(t=>t.status===e)}searchTasks(e){const t=[],s=e.toLowerCase();for(const r of this._projects)r.tasks.filter(a=>{var c;return a.name.toLowerCase().includes(s)||((c=a.description)==null?void 0:c.toLowerCase().includes(s))||a.assignee.toLowerCase().includes(s)}).forEach(a=>{t.push({task:a,project:r})});return t}searchMembers(e){const t=[],s=e.toLowerCase();for(const r of this._projects)r.members.filter(a=>a.name.toLowerCase().includes(s)||a.email.toLowerCase().includes(s)||a.role.toLowerCase().includes(s)).forEach(a=>{t.push({member:a,project:r})});return t}getOverallStats(){const e=this._projects.length,t=this.getProjectsByStatus("진행중").length,s=this.getProjectsByStatus("완료").length;let r=0,d=0,a=0,c=0;for(const o of this._projects){const h=o.getStats();r+=h.totalTasks,d+=h.completedTasks,a+=h.totalMembers,c+=o.getOverallProgress()}const g=this._projects.length>0?Math.round(c/this._projects.length):0;return{totalProjects:e,activeProjects:t,completedProjects:s,totalTasks:r,completedTasks:d,totalMembers:a,averageProgress:g}}getTodaysTasks(){const e=[];for(const t of this._projects)t.tasks.filter(r=>r.isToday()).forEach(r=>{e.push({task:r,project:t})});return e}getOverdueTasks(){const e=[];for(const t of this._projects)t.tasks.filter(r=>r.isOverdue()).forEach(r=>{e.push({task:r,project:t})});return e}exportData(){return this._projects.map(e=>e.toJSON())}importData(e){this._projects=e.map(t=>new p(t)),this.updateStore()}clear(){this._projects=[],this.updateStore()}}const y=[{id:"1",name:"웹사이트 리뉴얼",description:"회사 웹사이트를 새로운 디자인으로 리뉴얼",status:"진행중",members:[{id:"m1",name:"김개발",email:"dev.kim@company.com",role:"프론트엔드 개발자",department:"개발팀",joinDate:"2024-01-15"},{id:"m2",name:"박디자인",email:"design.park@company.com",role:"UI/UX 디자이너",department:"디자인팀",joinDate:"2024-02-01"},{id:"m3",name:"이프론트",email:"frontend.lee@company.com",role:"프론트엔드 개발자",department:"개발팀",joinDate:"2024-01-20"},{id:"m4",name:"최백엔드",email:"backend.choi@company.com",role:"백엔드 개발자",department:"개발팀",joinDate:"2024-01-10"},{id:"m5",name:"테스터",email:"test@company.com",role:"QA 엔지니어",department:"품질보증팀",joinDate:"2024-03-01"}],tasks:[{id:"1-1",name:"요구사항 분석",description:"프로젝트 요구사항 정의 및 분석",assignee:"김개발",status:"completed",priority:"high",startDate:"2024-08-01",endDate:"2024-08-05",progress:100,projectId:"1",color:"bg-blue-500"},{id:"1-2",name:"UI/UX 디자인",description:"사용자 인터페이스 및 경험 디자인",assignee:"박디자인",status:"in-progress",priority:"high",startDate:"2024-08-05",endDate:"2024-08-15",progress:75,projectId:"1",dependencies:["1-1"],color:"bg-green-500"},{id:"1-3",name:"프론트엔드 개발",description:"React 기반 프론트엔드 개발",assignee:"이프론트",status:"in-progress",priority:"medium",startDate:"2024-08-10",endDate:"2024-08-25",progress:60,projectId:"1",dependencies:["1-2"],color:"bg-purple-500"},{id:"1-4",name:"백엔드 API 개발",description:"RESTful API 서버 개발",assignee:"최백엔드",status:"planned",priority:"high",startDate:"2024-08-15",endDate:"2024-08-30",progress:20,projectId:"1",dependencies:["1-1"],color:"bg-orange-500"},{id:"1-5",name:"통합 테스트",description:"전체 시스템 통합 테스트",assignee:"테스터",status:"planned",priority:"medium",startDate:"2024-08-25",endDate:"2024-09-05",progress:0,projectId:"1",dependencies:["1-3","1-4"],color:"bg-red-500"}]},{id:"2",name:"모바일 앱 개발",description:"iOS/Android 앱 개발 프로젝트",status:"진행중",members:[{id:"m6",name:"기획자",email:"plan@company.com",role:"프로덕트 매니저",department:"기획팀",joinDate:"2024-02-15"},{id:"m7",name:"iOS개발자",email:"ios@company.com",role:"iOS 개발자",department:"개발팀",joinDate:"2024-03-01"}],tasks:[{id:"2-1",name:"앱 기획",assignee:"기획자",status:"completed",priority:"high",startDate:"2024-08-01",endDate:"2024-08-10",progress:100,projectId:"2",color:"bg-blue-500"},{id:"2-2",name:"iOS 개발",assignee:"iOS개발자",status:"in-progress",priority:"high",startDate:"2024-08-10",endDate:"2024-09-15",progress:45,projectId:"2",dependencies:["2-1"],color:"bg-green-500"}]},{id:"3",name:"API 서버 구축",description:"RESTful API 서버 구축 및 배포",status:"완료",members:[{id:"m8",name:"시니어개발자",email:"senior@company.com",role:"시니어 개발자",department:"개발팀",joinDate:"2023-12-01"},{id:"m9",name:"백엔드개발자",email:"backend@company.com",role:"백엔드 개발자",department:"개발팀",joinDate:"2024-01-05"}],tasks:[{id:"3-1",name:"서버 아키텍처 설계",assignee:"시니어개발자",status:"completed",priority:"high",startDate:"2024-07-01",endDate:"2024-07-15",progress:100,projectId:"3",color:"bg-blue-500"},{id:"3-2",name:"API 개발",assignee:"백엔드개발자",status:"completed",priority:"high",startDate:"2024-07-15",endDate:"2024-08-15",progress:100,projectId:"3",dependencies:["3-1"],color:"bg-green-500"}]}],m=new b(y),w=m.store,S=(i,e)=>m.addTask(i,e),I=(i,e)=>m.updateTask(i,e),M=i=>m.deleteTask(i);function P(i){switch(i){case"completed":return"bg-green-500";case"in-progress":return"bg-blue-500";case"planned":return"bg-gray-500";case"on-hold":return"bg-yellow-500";default:return"bg-gray-500"}}function x(i){switch(i){case"high":return"text-red-500";case"medium":return"text-yellow-500";case"low":return"text-green-500";default:return"text-gray-500"}}export{S as a,x as b,M as d,P as g,w as p,I as u};
