{
  "version": 3,
  "sources": ["../../@event-calendar/core/src/Calendar.svelte", "../../@event-calendar/core/src/lib/a11y.js", "../../@event-calendar/core/src/lib/actions.js", "../../@event-calendar/core/src/lib/date.js", "../../@event-calendar/core/src/lib/utils.js", "../../@event-calendar/core/src/lib/debounce.js", "../../@event-calendar/core/src/lib/payload.js", "../../@event-calendar/core/src/lib/dom.js", "../../@event-calendar/core/src/lib/view.js", "../../@event-calendar/core/src/lib/events.js", "../../@event-calendar/core/src/lib/options.js", "../../@event-calendar/core/src/lib/range.js", "../../@event-calendar/core/src/lib/resources.js", "../../@event-calendar/core/src/lib/stores.js", "../../@event-calendar/core/src/lib/times.js", "../../@event-calendar/core/src/storage/options.js", "../../@event-calendar/core/src/storage/stores.js", "../../@event-calendar/core/src/storage/state.js", "../../@event-calendar/core/src/Buttons.svelte", "../../@event-calendar/core/src/Toolbar.svelte", "../../@event-calendar/core/src/Auxiliary.svelte", "../../@event-calendar/core/src/plugins/day-grid/stores.js", "../../@event-calendar/core/src/plugins/day-grid/Header.svelte", "../../@event-calendar/core/src/lib/components/BaseEvent.svelte", "../../@event-calendar/core/src/lib/components/InteractableEvent.svelte", "../../@event-calendar/core/src/plugins/day-grid/Event.svelte", "../../@event-calendar/core/src/plugins/day-grid/Popup.svelte", "../../@event-calendar/core/src/plugins/day-grid/Day.svelte", "../../@event-calendar/core/src/plugins/day-grid/Week.svelte", "../../@event-calendar/core/src/plugins/day-grid/Body.svelte", "../../@event-calendar/core/src/plugins/day-grid/View.svelte", "../../@event-calendar/core/src/plugins/day-grid/index.js", "../../@event-calendar/core/src/plugins/interaction/lib/events.js", "../../@event-calendar/core/src/plugins/interaction/lib/utils.js", "../../@event-calendar/core/src/plugins/interaction/Action.svelte", "../../@event-calendar/core/src/plugins/interaction/Pointer.svelte", "../../@event-calendar/core/src/plugins/interaction/Resizer.svelte", "../../@event-calendar/core/src/plugins/interaction/Auxiliary.svelte", "../../@event-calendar/core/src/plugins/interaction/index.js", "../../@event-calendar/core/src/plugins/list/Event.svelte", "../../@event-calendar/core/src/plugins/list/Day.svelte", "../../@event-calendar/core/src/plugins/list/Body.svelte", "../../@event-calendar/core/src/plugins/list/View.svelte", "../../@event-calendar/core/src/plugins/list/index.js", "../../@event-calendar/core/src/plugins/time-grid/stores.js", "../../@event-calendar/core/src/plugins/time-grid/utils.js", "../../@event-calendar/core/src/plugins/time-grid/Section.svelte", "../../@event-calendar/core/src/plugins/time-grid/Body.svelte", "../../@event-calendar/core/src/plugins/time-grid/Event.svelte", "../../@event-calendar/core/src/plugins/time-grid/NowIndicator.svelte", "../../@event-calendar/core/src/plugins/time-grid/Day.svelte", "../../@event-calendar/core/src/plugins/time-grid/all-day/Event.svelte", "../../@event-calendar/core/src/plugins/time-grid/all-day/Day.svelte", "../../@event-calendar/core/src/plugins/time-grid/all-day/Week.svelte", "../../@event-calendar/core/src/plugins/time-grid/View.svelte", "../../@event-calendar/core/src/plugins/time-grid/index.js", "../../@event-calendar/core/src/plugins/resource-time-grid/Label.svelte", "../../@event-calendar/core/src/plugins/resource-time-grid/View.svelte", "../../@event-calendar/core/src/plugins/resource-time-grid/index.js", "../../@event-calendar/core/src/plugins/resource-timeline/stores.js", "../../@event-calendar/core/src/plugins/resource-timeline/Label.svelte", "../../@event-calendar/core/src/plugins/resource-timeline/Expander.svelte", "../../@event-calendar/core/src/plugins/resource-timeline/Sidebar.svelte", "../../@event-calendar/core/src/plugins/resource-timeline/Header.svelte", "../../@event-calendar/core/src/plugins/resource-timeline/lib.js", "../../@event-calendar/core/src/plugins/resource-timeline/Event.svelte", "../../@event-calendar/core/src/plugins/resource-timeline/Day.svelte", "../../@event-calendar/core/src/plugins/resource-timeline/Days.svelte", "../../@event-calendar/core/src/plugins/resource-timeline/Body.svelte", "../../@event-calendar/core/src/plugins/resource-timeline/NowIndicator.svelte", "../../@event-calendar/core/src/plugins/resource-timeline/View.svelte", "../../@event-calendar/core/src/plugins/resource-timeline/index.js"],
  "sourcesContent": ["<script>\n    import '../dist/index.css';\n    import {setContext, untrack} from 'svelte';\n    import {get} from 'svelte/store';\n    import {diff} from './storage/options.js';\n    import State from './storage/state.js';\n    import Toolbar from './Toolbar.svelte';\n    import Auxiliary from './Auxiliary.svelte';\n    import {\n        assign, createEvents, getElementWithPayload, getPayload, listView, nextDate,\n        prevDate, toEventWithLocalDates, toLocalDate, toViewWithLocalDates\n    } from '#lib';\n\n    let {plugins = [], options = {}} = $props();\n\n    let state = new State(plugins, options);\n    setContext('state', state);\n\n    let {\n        _viewComponent, _interaction, _iClass, _events, _scrollable,\n        date, duration, hiddenDays, height, theme, view\n    } = state;\n\n    // Reactively update options that did change\n    let prevOptions = {...options};\n    $effect(() => {\n        for (let [name, value] of diff(options, prevOptions)) {\n            untrack(() => {\n                setOption(name, value);\n            });\n        }\n        assign(prevOptions, options);\n    });\n\n    export function setOption(name, value) {\n        state._set(name, value);\n        return this;\n    }\n\n    export function getOption(name) {\n        let value = state._get(name);\n        return value instanceof Date ? toLocalDate(value) : value;\n    }\n\n    export function refetchEvents() {\n        state._fetchedRange.set({start: undefined, end: undefined});\n        return this;\n    }\n\n    export function getEvents() {\n        return $_events.map(toEventWithLocalDates);\n    }\n\n    export function getEventById(id) {\n        for (let event of $_events) {\n            if (event.id == id) {\n                return toEventWithLocalDates(event);\n            }\n        }\n        return null;\n    }\n\n    export function addEvent(event) {\n        event = createEvents([event])[0];\n        $_events.push(event);\n        $_events = $_events;\n        return toEventWithLocalDates(event);\n    }\n\n    export function updateEvent(event) {\n        let id = String(event.id);\n        let idx = $_events.findIndex(event => event.id === id);\n        if (idx >= 0) {\n            event = createEvents([event])[0];\n            $_events[idx] = event;\n            return toEventWithLocalDates(event);\n        }\n        return null;\n    }\n\n    export function removeEventById(id) {\n        id = String(id);\n        let idx = $_events.findIndex(event => event.id === id);\n        if (idx >= 0) {\n            $_events.splice(idx, 1);\n            $_events = $_events;\n        }\n        return this;\n    }\n\n    export function getView() {\n        return toViewWithLocalDates(get(state._view));\n    }\n\n    export function unselect() {\n        $_interaction.action?.unselect();\n        return this;\n    }\n\n    export function dateFromPoint(x, y) {\n        let dayEl = getElementWithPayload(x, y);\n        if (dayEl) {\n            let info = getPayload(dayEl)(x, y);\n            info.date = toLocalDate(info.date);\n\n            return info;\n        }\n        return null;\n    }\n\n    export function next() {\n        $date = nextDate($date, $duration);\n        return this;\n    }\n\n    export function prev() {\n        $date = prevDate($date, $duration, $hiddenDays);\n        return this;\n    }\n\n    let View = $derived($_viewComponent);\n</script>\n\n<div\n    class=\"{$theme.calendar} {$theme.view}{$_scrollable ? ' ' + $theme.withScroll : ''}{$_iClass ? ' ' + $theme[$_iClass] : ''}\"\n    style:height={$height}\n    role=\"{listView($view) ? 'list' : 'table'}\"\n>\n    <Toolbar/>\n    <View/>\n</div>\n<Auxiliary/>\n", "\nexport function keyEnter(fn) {\n    return function (e) {\n        return e.key === 'Enter' || e.key === ' ' && !e.preventDefault()  // prevent page scroll down\n            ? fn.call(this, e)\n            : undefined;\n    };\n}\n", "\nexport function setContent(node, content) {\n    let actions = {\n        update(content) {\n            if (typeof content == 'string') {\n                node.innerText = content;\n            } else if (content?.domNodes) {\n                node.replaceChildren(...content.domNodes);\n            } else if (content?.html) {\n                node.innerHTML = content.html;\n            }\n        }\n    };\n    actions.update(content);\n\n    return actions;\n}\n\n/** Dispatch event occurred outside of node */\nexport function outsideEvent(node, type) {\n\n    const handlePointerDown = jsEvent => {\n        if (node && !node.contains(jsEvent.target)) {\n            node.dispatchEvent(\n                new CustomEvent(type + 'outside', {detail: {jsEvent}})\n            );\n        }\n    };\n\n    document.addEventListener(type, handlePointerDown, true);\n\n    return {\n        destroy() {\n            document.removeEventListener(type, handlePointerDown, true);\n        }\n    };\n}\n\nexport function observeResize(node, callback) {\n    let resizeObserver = new ResizeObserver(entries => {\n        for (let entry of entries) {\n            callback(entry);\n        }\n    });\n    resizeObserver.observe(node);\n\n    return {\n        destroy() {\n            resizeObserver.unobserve(node);\n        }\n    };\n}\n", "export const DAY_IN_SECONDS = 86400;\n\nexport function createDate(input = undefined) {\n    if (input !== undefined) {\n        return input instanceof Date ? _fromLocalDate(input) : _fromISOString(input);\n    }\n\n    return _fromLocalDate(new Date());\n}\n\nexport function createDuration(input) {\n    if (typeof input === 'number') {\n        input = {seconds: input};\n    } else if (typeof input === 'string') {\n        // Expected format hh[:mm[:ss]]\n        let seconds = 0, exp = 2;\n        for (let part of input.split(':', 3)) {\n            seconds += parseInt(part, 10) * Math.pow(60, exp--);\n        }\n        input = {seconds};\n    } else if (input instanceof Date) {\n        input = {hours: input.getUTCHours(), minutes: input.getUTCMinutes(), seconds: input.getUTCSeconds()};\n    }\n\n    let weeks = input.weeks || input.week || 0;\n\n    return {\n        years: input.years || input.year || 0,\n        months: input.months || input.month || 0,\n        days: weeks * 7 + (input.days || input.day || 0),\n        seconds: (input.hours || input.hour || 0) * 60 * 60 +\n            (input.minutes || input.minute || 0) * 60 +\n            (input.seconds || input.second || 0),\n        inWeeks: !!weeks\n    };\n}\n\nexport function cloneDate(date) {\n    return new Date(date.getTime());\n}\n\nexport function addDuration(date, duration, x = 1) {\n    date.setUTCFullYear(date.getUTCFullYear() + x * duration.years);\n    let month = date.getUTCMonth() + x * duration.months;\n    date.setUTCMonth(month);\n    month %= 12;\n    if (month < 0) {\n        month += 12;\n    }\n    while (date.getUTCMonth() !== month) {\n        subtractDay(date);\n    }\n    date.setUTCDate(date.getUTCDate() + x * duration.days);\n    date.setUTCSeconds(date.getUTCSeconds() + x * duration.seconds);\n\n    return date;\n}\n\nexport function subtractDuration(date, duration, x = 1) {\n    return addDuration(date, duration, -x);\n}\n\nexport function addDay(date, x = 1) {\n    date.setUTCDate(date.getUTCDate() + x);\n\n    return date;\n}\n\nexport function subtractDay(date, x = 1) {\n    return addDay(date, -x);\n}\n\nexport function setMidnight(date) {\n    date.setUTCHours(0, 0, 0, 0);\n\n    return date;\n}\n\nexport function toLocalDate(date) {\n    return new Date(\n        date.getUTCFullYear(),\n        date.getUTCMonth(),\n        date.getUTCDate(),\n        date.getUTCHours(),\n        date.getUTCMinutes(),\n        date.getUTCSeconds()\n    );\n}\n\nexport function toISOString(date, len = 19) {\n    return date.toISOString().substring(0, len);\n}\n\nexport function datesEqual(date1, ...dates2) {\n    return dates2.every(date2 => date1.getTime() === date2.getTime());\n}\n\nexport function nextClosestDay(date, day) {\n    let diff = day - date.getUTCDay();\n    date.setUTCDate(date.getUTCDate() + (diff >= 0 ? diff : diff + 7));\n    return date;\n}\n\nexport function prevClosestDay(date, day) {\n    let diff = day - date.getUTCDay();\n    date.setUTCDate(date.getUTCDate() + (diff <= 0 ? diff : diff - 7));\n    return date;\n}\n\n/**\n * Check whether given date is string which contains no time part\n  */\nexport function noTimePart(date) {\n    return typeof date === 'string' && date.length <= 10;\n}\n\n/**\n * Copy time from one date to another\n */\nexport function copyTime(toDate, fromDate) {\n    toDate.setUTCHours(fromDate.getUTCHours(), fromDate.getUTCMinutes(), fromDate.getUTCSeconds(), 0);\n\n    return toDate;\n}\n\n/**\n * Get duration value in seconds\n */\nexport function toSeconds(duration) {\n    return duration.seconds;\n}\n\n/**\n * Move the date forward (when pressing the next button)\n */\nexport function nextDate(date, duration) {\n    addDuration(date, duration);\n    return date;\n}\n\n/**\n * Move the date backward (when pressing the prev button)\n */\nexport function prevDate(date, duration, hiddenDays) {\n    subtractDuration(date, duration);\n    if (hiddenDays.length && hiddenDays.length < 7) {\n        while (hiddenDays.includes(date.getUTCDay())) {\n            subtractDay(date);\n        }\n    }\n    return date;\n}\n\n/**\n * For a given date, get its week number\n *  - ISO @see https://stackoverflow.com/questions/6117814/get-week-of-year-in-javascript-like-in-php\n *  - Western @see https://en.wikipedia.org/wiki/Week#Other_week_numbering_systems\n */\nexport function getWeekNumber(date, firstDay) {\n    // Copy date so don't modify original\n    date = cloneDate(date);\n    if (firstDay == 0) {  // Western\n        // Set to nearest Saturday: current date + 6 - current day number\n        date.setUTCDate(date.getUTCDate() + 6 - date.getUTCDay());\n    } else {  // ISO\n        // Set to nearest Thursday: current date + 4 - current day number\n        // Make Sunday's day number 7\n        date.setUTCDate(date.getUTCDate() + 4 - (date.getUTCDay() || 7));\n    }\n    // Get first day of year\n    let yearStart = new Date(Date.UTC(date.getUTCFullYear(),0,1));\n    // Calculate full weeks to `date`\n    return Math.ceil((((date - yearStart) / 1000 / DAY_IN_SECONDS) + 1) / 7);\n}\n\n/**\n * Private functions\n */\n\nfunction _fromLocalDate(date) {\n    return new Date(Date.UTC(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds()\n    ));\n}\n\nfunction _fromISOString(str) {\n    const parts = str.match(/\\d+/g);\n    return new Date(Date.UTC(\n        Number(parts[0]),\n        Number(parts[1]) - 1,\n        Number(parts[2]),\n        Number(parts[3] || 0),\n        Number(parts[4] || 0),\n        Number(parts[5] || 0)\n    ));\n}\n", "export function assign(...args) {\n    return Object.assign(...args);\n}\n\nexport function keys(object) {\n    return Object.keys(object);\n}\n\nexport function entries(object) {\n    return Object.entries(object);\n}\n\nexport function floor(value) {\n    return Math.floor(value);\n}\n\nexport function ceil(value) {\n    return Math.ceil(value);\n}\n\nexport function min(...args) {\n    return Math.min(...args);\n}\n\nexport function max(...args) {\n    return Math.max(...args);\n}\n\nexport function symbol() {\n    return Symbol('ec');\n}\n\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n\nexport function isFunction(value) {\n    return typeof value === 'function';\n}\n\nexport function run(fn) {\n    return fn();\n}\n\nexport function runAll(fns) {\n    fns.forEach(run);\n}\n\nexport function noop() {}\n\nexport const identity = (x) => x;\n\nexport function stopPropagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        if (fn) {\n            fn.call(this, event);\n        }\n    };\n}\n", "import {runAll} from './utils.js';\n\nexport function debounce(fn, handle, queueStore) {\n    queueStore.update(queue => queue.set(handle, fn));\n}\n\nexport function flushDebounce(queue) {\n    runAll(queue);\n    queue.clear();\n}\n\nexport function task(fn, handle, tasks) {\n    handle ??= fn;\n    if (!tasks.has(handle)) {\n        tasks.set(handle, setTimeout(() => {\n            tasks.delete(handle);\n            fn();\n        }));\n    }\n}\n", "import {symbol} from './utils.js';\n\nlet payloadProp = symbol();\nexport function setPayload(obj, payload) {\n    obj[payloadProp] = payload;\n}\n\nexport function hasPayload(obj) {\n    return !!obj?.[payloadProp];\n}\n\nexport function getPayload(obj) {\n    return obj[payloadProp];\n}\n", "import {hasPayload} from './payload.js';\n\nexport function createElement(tag, className, content, attrs = []) {\n    let el = document.createElement(tag);\n    el.className = className;\n    if (typeof content == 'string') {\n        el.innerText = content;\n    } else if (content.domNodes) {\n        el.replaceChildren(...content.domNodes);\n    } else if (content.html) {\n        el.innerHTML = content.html;\n    }\n    for (let attr of attrs) {\n        el.setAttribute(...attr);\n    }\n    return el;\n}\n\nexport function hasYScroll(el) {\n    return el.scrollHeight > el.clientHeight;\n}\n\nexport function rect(el) {\n    return el.getBoundingClientRect();\n}\n\nexport function ancestor(el, up) {\n    while (up--) {\n        el = el.parentElement;\n    }\n    return el;\n}\n\nexport function height(el) {\n    return rect(el).height;\n}\n\nexport function getElementWithPayload(x, y, root = document, processed = []) {\n    processed.push(root);\n    for (let el of root.elementsFromPoint(x, y)) {\n        if (hasPayload(el)) {\n            return el;\n        }\n        /** @see https://github.com/vkurko/calendar/issues/142 */\n        if (el.shadowRoot && !processed.includes(el.shadowRoot)) {\n            let shadowEl = getElementWithPayload(x, y, el.shadowRoot, processed);\n            if (shadowEl) {\n                return shadowEl;\n            }\n        }\n    }\n    return null;\n}\n\nexport function listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\n", "import {assign} from './utils.js';\nimport {toLocalDate} from './date.js';\n\nexport function createView(view, _viewTitle, _currentRange, _activeRange) {\n    return {\n        type: view,\n        title: _viewTitle,\n        currentStart: _currentRange.start,\n        currentEnd: _currentRange.end,\n        activeStart: _activeRange.start,\n        activeEnd: _activeRange.end,\n        calendar: undefined\n    };\n}\n\nexport function toViewWithLocalDates(view) {\n    view = assign({}, view);\n    view.currentStart = toLocalDate(view.currentStart);\n    view.currentEnd = toLocalDate(view.currentEnd);\n    view.activeStart = toLocalDate(view.activeStart);\n    view.activeEnd = toLocalDate(view.activeEnd);\n\n    return view;\n}\n\nexport function listView(view) {\n    return view.startsWith('list');\n}\n\nexport function timelineView(view) {\n    return view.includes('Timeline');\n}\n", "import {addDay, addDuration, datesEqual, createDate, cloneDate, setMidnight, toLocalDate, toISOString, noTimePart, copyTime} from './date.js';\nimport {createElement} from './dom.js';\nimport {assign, isArray, isFunction} from './utils.js';\nimport {toViewWithLocalDates} from './view.js';\n\nlet eventId = 1;\nexport function createEvents(input) {\n    return input.map(event => {\n        let result = {\n            id: 'id' in event ? String(event.id) : `{generated-${eventId++}}`,\n            resourceIds: toArrayProp(event, 'resourceId').map(String),\n            allDay: event.allDay ?? (noTimePart(event.start) && noTimePart(event.end)),\n            start: createDate(event.start),\n            end: createDate(event.end),\n            title: event.title ?? '',\n            editable: event.editable,\n            startEditable: event.startEditable,\n            durationEditable: event.durationEditable,\n            display: event.display ?? 'auto',\n            extendedProps: event.extendedProps ?? {},\n            backgroundColor: event.backgroundColor ?? event.color,\n            textColor: event.textColor,\n            classNames: toArrayProp(event, 'className'),\n            styles: toArrayProp(event, 'style')\n        };\n\n        if (result.allDay) {\n            // Make sure all-day events start and end at midnight\n            setMidnight(result.start);\n            let end = cloneDate(result.end);\n            setMidnight(result.end);\n            if (\n                !datesEqual(result.end, end) ||\n                datesEqual(result.end, result.start)  /** @see https://github.com/vkurko/calendar/issues/50 */\n            ) {\n                addDay(result.end);\n            }\n        }\n\n        return result;\n    });\n}\n\nfunction toArrayProp(input, propName) {\n    let result = input[propName + 's'] ?? input[propName] ?? [];\n    return isArray(result) ? result : [result];\n}\n\nexport function createEventSources(input) {\n    return input.map(source => ({\n        events: source.events,\n        url: (source.url && source.url.trimEnd('&')) || '',\n        method: (source.method && source.method.toUpperCase()) || 'GET',\n        extraParams: source.extraParams || {}\n    }));\n}\n\nexport function createEventChunk(event, start, end) {\n    let chunk = {\n        start: event.start > start ? event.start : start,\n        end: event.end < end ? event.end : end,\n        event\n    };\n    chunk.zeroDuration = datesEqual(chunk.start, chunk.end);\n\n    return chunk;\n}\n\nexport function sortEventChunks(chunks) {\n    // Sort by start date (all-day events always on top)\n    chunks.sort((a, b) => a.start - b.start || b.event.allDay - a.event.allDay);\n}\n\nexport function createEventContent(chunk, displayEventEnd, eventContent, theme, _intlEventTime, _view) {\n    let timeText = _intlEventTime.formatRange(\n        chunk.start,\n        displayEventEnd && chunk.event.display !== 'pointer' && !chunk.zeroDuration\n            ? copyTime(cloneDate(chunk.start), chunk.end)  // make Intl.formatRange output only the time part\n            : chunk.start\n    );\n    let content;\n\n    if (eventContent) {\n        content = isFunction(eventContent)\n            ? eventContent({\n                event: toEventWithLocalDates(chunk.event),\n                timeText,\n                view: toViewWithLocalDates(_view)\n            })\n            : eventContent;\n    }\n\n    if (content === undefined) {\n        let domNodes;\n        switch (chunk.event.display) {\n            case 'background':\n                domNodes = [];\n                break;\n            case 'pointer':\n                domNodes = [createTimeElement(timeText, chunk, theme)];\n                break;\n            default:\n                domNodes = [\n                    ...chunk.event.allDay ? [] : [createTimeElement(timeText, chunk, theme)],\n                    createElement('h4', theme.eventTitle, chunk.event.title)\n                ];\n        }\n        content = {domNodes};\n    }\n\n    return [timeText, content];\n}\n\nfunction createTimeElement(timeText, chunk, theme) {\n    return createElement(\n        'time',\n        theme.eventTime,\n        timeText,\n        [['datetime', toISOString(chunk.start)]]\n    );\n}\n\nexport function createEventClasses(eventClassNames, event, _view) {\n    let result = event.classNames;\n    if (eventClassNames) {\n        if (isFunction(eventClassNames)) {\n            eventClassNames = eventClassNames({\n                event: toEventWithLocalDates(event),\n                view: toViewWithLocalDates(_view)\n            });\n        }\n        result = [\n            ...isArray(eventClassNames) ? eventClassNames : [eventClassNames],\n            ...result\n        ];\n    }\n    return result;\n}\n\nexport function toEventWithLocalDates(event) {\n    return _cloneEvent(event, toLocalDate);\n}\n\nexport function cloneEvent(event) {\n    return _cloneEvent(event, cloneDate);\n}\n\nfunction _cloneEvent(event, dateFn) {\n    event = assign({}, event);\n    event.start = dateFn(event.start);\n    event.end = dateFn(event.end);\n\n    return event;\n}\n\n/**\n * Prepare event chunks for month view and all-day slot in week view\n */\nexport function prepareEventChunks(chunks, hiddenDays) {\n    let longChunks = {};\n\n    if (chunks.length) {\n        sortEventChunks(chunks);\n\n        let prevChunk;\n        for (let chunk of chunks) {\n            let dates = [];\n            let date = setMidnight(cloneDate(chunk.start));\n            while (chunk.end > date) {\n                if (!hiddenDays.includes(date.getUTCDay())) {\n                    dates.push(cloneDate(date));\n                    if (dates.length > 1) {\n                        let key = date.getTime();\n                        if (longChunks[key]) {\n                            longChunks[key].chunks.push(chunk);\n                        } else {\n                            longChunks[key] = {\n                                sorted: false,\n                                chunks: [chunk]\n                            };\n                        }\n                    }\n                }\n                addDay(date);\n            }\n            if (dates.length) {\n                chunk.date = dates[0];\n                chunk.days = dates.length;\n                chunk.dates = dates;\n                // Adjust the start and end dates of the chunk if hidden days affected them\n                if (chunk.start < dates[0]) {\n                    chunk.start = dates[0];\n                }\n                let maxEnd = addDay(cloneDate(dates.at(-1)));\n                if (chunk.end > maxEnd) {\n                    chunk.end = maxEnd;\n                }\n            } else {\n                chunk.date = setMidnight(cloneDate(chunk.start));\n                chunk.days = 1;\n                chunk.dates = [chunk.date];\n            }\n\n            if (prevChunk && datesEqual(prevChunk.date, chunk.date)) {\n                chunk.prev = prevChunk;\n            }\n            prevChunk = chunk;\n        }\n    }\n\n    return longChunks;\n}\n\nexport function repositionEvent(chunk, longChunks, height) {\n    chunk.top = 0;\n    if (chunk.prev) {\n        chunk.top = chunk.prev.bottom + 1;\n    }\n    chunk.bottom = chunk.top + height;\n    let margin = 1;\n    let key = chunk.date.getTime();\n    if (longChunks[key]) {\n        if (!longChunks[key].sorted) {\n            longChunks[key].chunks.sort((a, b) => a.top - b.top);\n            longChunks[key].sorted = true;\n        }\n        for (let longChunk of longChunks[key].chunks) {\n            if (chunk.top < longChunk.bottom && chunk.bottom > longChunk.top) {\n                let offset = longChunk.bottom - chunk.top + 1;\n                margin += offset;\n                chunk.top += offset;\n                chunk.bottom += offset;\n            }\n        }\n    }\n\n    return margin;\n}\n\nexport function runReposition(refs, data) {\n    refs.length = data.length;\n    let result = [];\n    for (let ref of refs) {\n        result.push(ref?.reposition?.());\n    }\n    return result;\n}\n\n/**\n * Check whether the event intersects with the given date range and resources\n * @param event\n * @param start\n * @param end\n * @param resources\n * @return boolean\n */\nexport function eventIntersects(event, start, end, resources) {\n    if (event.start < end && event.end > start) {\n        if (resources) {\n            if (!isArray(resources)) {\n                resources = [resources];\n            }\n            return resources.some(resource => event.resourceIds.includes(resource.id));\n        }\n        return true;\n    }\n    return false;\n}\n\nexport function helperEvent(display) {\n    return previewEvent(display) || ghostEvent(display) || pointerEvent(display);\n}\n\nexport function bgEvent(display) {\n    return display === 'background';\n}\n\nexport function previewEvent(display) {\n    return display === 'preview';\n}\n\nexport function ghostEvent(display) {\n    return display === 'ghost';\n}\n\nexport function pointerEvent(display) {\n    return display === 'pointer';\n}\n", "\nexport function btnTextDay(text) {\n    return btnText(text, 'day');\n}\n\nexport function btnTextWeek(text) {\n    return btnText(text, 'week');\n}\n\nexport function btnTextMonth(text) {\n    return btnText(text, 'month');\n}\n\nexport function btnTextYear(text) {\n    return btnText(text, 'year');\n}\n\nfunction btnText(text, period) {\n    return {\n        ...text,\n        next: 'Next ' + period,\n        prev: 'Previous ' + period\n    };\n}\n\nexport function themeView(view) {\n    return theme => ({...theme, view});\n}\n", "import {createDate, setMidnight} from './date.js';\n\nexport function createDateRange(input) {\n    let start, end;\n    if (input) {\n        ({start, end} = input);\n        if (start) {\n            start = setMidnight(createDate(start));\n        }\n        if (end) {\n            end = setMidnight(createDate(end));\n        }\n    }\n    return {start, end};\n}\n\nexport function outsideRange(date, range) {\n    return range.start && date < range.start || range.end && date > range.end;\n}\n\nexport function limitToRange(date, range) {\n    if (range.start && date < range.start) {\n        date = range.start;\n    }\n    if (range.end && date > range.end) {\n        date = range.end;\n    }\n    return date;\n}\n", "import {setPayload} from './payload.js';\n\nexport function createResources(input) {\n    let result = [];\n    _createResources(input, 0, result);\n    return result;\n}\n\nfunction _createResources(input, level, flat) {\n    let result = [];\n    for (let item of input) {\n        let resource = createResource(item);\n        result.push(resource);\n        flat.push(resource);\n        let payload = {\n            level,\n            children: [],\n            expanded: true,\n            hidden: false\n        };\n        setPayload(resource, payload);\n        if (item.children) {\n            payload.children = _createResources(item.children, level + 1, flat);\n        }\n    }\n    return result;\n}\n\nexport function createResource(input) {\n    return {\n        id: String(input.id),\n        title: input.title || '',\n        eventBackgroundColor: input.eventBackgroundColor,\n        eventTextColor: input.eventTextColor,\n        extendedProps: input.extendedProps ?? {}\n    };\n}\n\nexport function resourceBackgroundColor(event, resources) {\n    return findResource(event, resources)?.eventBackgroundColor;\n}\n\nexport function resourceTextColor(event, resources) {\n    return findResource(event, resources)?.eventTextColor;\n}\n\nfunction findResource(event, resources) {\n    return resources.find(resource => event.resourceIds.includes(resource.id));\n}\n", "import {derived} from 'svelte/store';\nimport {isFunction} from './utils.js';\nimport {toLocalDate} from './date.js';\nimport {createResources} from './resources.js';\nimport {getPayload} from './payload.js';\n\nexport function intl(locale, format) {\n    return derived([locale, format], ([$locale, $format]) => {\n        let intl = isFunction($format)\n            ? {format: $format}\n            : new Intl.DateTimeFormat($locale, $format);\n        return {\n            format: date => intl.format(toLocalDate(date))\n        };\n    });\n}\n\nexport function intlRange(locale, format) {\n    return derived([locale, format], ([$locale, $format]) => {\n        let formatRange;\n        if (isFunction($format)) {\n            formatRange = $format;\n        } else {\n            let intl = new Intl.DateTimeFormat($locale, $format);\n            formatRange = (start, end) => {\n                if (start <= end) {\n                    return intl.formatRange(start, end);\n                } else {\n                    // In iOS 16 and older, intl.formatRange() throws an exception if the start date is later than the end date.\n                    // Therefore, we first swap the parameters, and then swap the resulting parts.\n                    /** @see https://github.com/vkurko/calendar/issues/227 */\n                    let parts = intl.formatRangeToParts(end, start);\n                    let result = '';\n                    let sources = ['startRange', 'endRange'];\n                    let processed = [false, false];\n                    for (let part of parts) {\n                        let i = sources.indexOf(part.source);\n                        if (i >= 0) {\n                            if (!processed[i]) {\n                                result += _getParts(sources[1 - i], parts);\n                                processed[i] = true;\n                            }\n                        } else {\n                            result += part.value;\n                        }\n                    }\n                    return result;\n                }\n            };\n        }\n        return {\n            formatRange: (start, end) => formatRange(toLocalDate(start), toLocalDate(end))\n        };\n    });\n}\n\nfunction _getParts(source, parts) {\n    let result = '';\n    for (let part of parts) {\n        if (part.source == source) {\n            result += part.value;\n        }\n    }\n    return result;\n}\n\nexport function viewResources(state) {\n    return derived(\n        [state.resources, state.filterResourcesWithEvents, state._filteredEvents, state._activeRange],\n        ([$resources, $filterResourcesWithEvents, $_filteredEvents, $_activeRange]) => {\n            let result = $resources.filter(resource => !getPayload(resource).hidden);\n\n            if ($filterResourcesWithEvents) {\n                result = $resources.filter(resource => {\n                    for (let event of $_filteredEvents) {\n                        if (\n                            event.display !== 'background' &&\n                            event.resourceIds.includes(resource.id) &&\n                            event.start < $_activeRange.end &&\n                            event.end > $_activeRange.start\n                        ) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n            }\n\n            if (!result.length) {\n                result = createResources([{}]);\n            }\n\n            return result;\n        }\n    );\n}\n", "import {addDuration, cloneDate, createDuration, DAY_IN_SECONDS, toISOString, toSeconds} from './date.js';\nimport {max as maxFn, min as minFn, isFunction} from './utils.js';\nimport {bgEvent} from './events.js';\n\nexport function createTimes(date, $slotDuration, $slotLabelInterval, $_slotTimeLimits, $_intlSlotLabel) {\n    date = cloneDate(date);\n    let times = [];\n    let end = cloneDate(date);\n    addDuration(date, $_slotTimeLimits.min);\n    addDuration(end, $_slotTimeLimits.max);\n    // Labels\n    if ($slotLabelInterval === undefined) {\n        $slotLabelInterval = $slotDuration.seconds < 3600\n            ? createDuration($slotDuration.seconds * 2)\n            : $slotDuration;\n    }\n    let label = cloneDate(date);\n    // Build times\n    while (date < end) {\n        times.push([\n            toISOString(date),\n            $_intlSlotLabel.format(date),\n            date >= label\n        ]);\n        while ($slotLabelInterval.seconds && date >= label) {\n            addDuration(label, $slotLabelInterval);\n        }\n        addDuration(date, $slotDuration);\n    }\n\n    return times;\n}\n\nexport function createSlotTimeLimits($slotMinTime, $slotMaxTime, $flexibleSlotTimeLimits, $_viewDates, $_filteredEvents) {\n    let min = createDuration($slotMinTime);\n    let max = createDuration($slotMaxTime);\n\n    if ($flexibleSlotTimeLimits) {\n        // If slotMaxTime goes past midnight, then extend it back by a maximum of 24 hours\n        let minMin = createDuration(minFn(toSeconds(min), maxFn(0, toSeconds(max) - DAY_IN_SECONDS)));\n        let maxMax = createDuration(maxFn(toSeconds(max), toSeconds(minMin) + DAY_IN_SECONDS));\n        let filter = isFunction($flexibleSlotTimeLimits?.eventFilter)\n            ? $flexibleSlotTimeLimits.eventFilter\n            : event => !bgEvent(event.display);\n        loop: for (let date of $_viewDates) {\n            let start = addDuration(cloneDate(date), min);\n            let end = addDuration(cloneDate(date), max);\n            let minStart = addDuration(cloneDate(date), minMin);\n            let maxEnd = addDuration(cloneDate(date), maxMax);\n            for (let event of $_filteredEvents) {\n                if (!event.allDay && filter(event) && event.start < maxEnd && event.end > minStart) {\n                    if (event.start < start) {\n                        let seconds = maxFn((event.start - date) / 1000, toSeconds(minMin));\n                        if (seconds < toSeconds(min)) {\n                            min.seconds = seconds;\n                        }\n                    }\n                    if (event.end > end) {\n                        let seconds = minFn((event.end - date) / 1000, toSeconds(maxMax));\n                        if (seconds > toSeconds(max)) {\n                            max.seconds = seconds;\n                        }\n                    }\n                    if (toSeconds(min) === toSeconds(minMin) && toSeconds(max) === toSeconds(maxMax)) {\n                        break loop;\n                    }\n                }\n            }\n        }\n    }\n\n    return {min, max};\n}\n", "import {\n    createDate, createDuration, createEvents, createEventSources, createResources, createDateRange, keys, setMidnight\n} from '#lib';\n\nexport function createOptions(plugins) {\n    let options = {\n        allDayContent: undefined,\n        allDaySlot: true,\n        buttonText: {\n            today: 'today',\n        },\n        customButtons: {},\n        date: new Date(),\n        datesSet: undefined,\n        dayHeaderFormat: {\n            weekday: 'short',\n            month: 'numeric',\n            day: 'numeric'\n        },\n        dayHeaderAriaLabelFormat: {\n            dateStyle: 'full'\n        },\n        displayEventEnd: true,\n        duration: {weeks: 1},\n        events: [],\n        eventAllUpdated: undefined,\n        eventBackgroundColor: undefined,\n        eventClassNames: undefined,\n        eventClick: undefined,\n        eventColor: undefined,\n        eventContent: undefined,\n        eventDidMount: undefined,\n        eventFilter: undefined,    // ec option\n        eventMouseEnter: undefined,\n        eventMouseLeave: undefined,\n        eventSources: [],\n        eventTextColor: undefined,\n        eventTimeFormat: {\n            hour: 'numeric',\n            minute: '2-digit'\n        },\n        filterEventsWithResources: false,\n        filterResourcesWithEvents: false,\n        firstDay: 0,\n        flexibleSlotTimeLimits: false,  // ec option\n        headerToolbar: {\n            start: 'title',\n            center: '',\n            end: 'today prev,next'\n        },\n        height: undefined,\n        hiddenDays: [],\n        highlightedDates: [],  // ec option\n        lazyFetching: true,\n        loading: undefined,\n        locale: undefined,\n        nowIndicator: false,\n        resourceLabelContent: undefined,\n        resourceLabelDidMount: undefined,\n        resources: [],\n        selectable: false,\n        scrollTime: '06:00:00',\n        slotDuration: '00:30:00',\n        slotEventOverlap: true,\n        slotHeight: 24,  // ec option\n        slotLabelInterval: undefined,\n        slotLabelFormat: {\n            hour: 'numeric',\n            minute: '2-digit'\n        },\n        slotMaxTime: '24:00:00',\n        slotMinTime: '00:00:00',\n        slotWidth: 72,\n        theme: {\n            allDay: 'ec-all-day',\n            active: 'ec-active',\n            bgEvent: 'ec-bg-event',\n            bgEvents: 'ec-bg-events',\n            body: 'ec-body',\n            button: 'ec-button',\n            buttonGroup: 'ec-button-group',\n            calendar: 'ec',\n            content: 'ec-content',\n            day: 'ec-day',\n            dayHead: 'ec-day-head',\n            days: 'ec-days',\n            disabled: 'ec-disabled',\n            event: 'ec-event',\n            eventBody: 'ec-event-body',\n            eventTime: 'ec-event-time',\n            eventTitle: 'ec-event-title',\n            events: 'ec-events',\n            extra: 'ec-extra',\n            handle: 'ec-handle',\n            header: 'ec-header',\n            hiddenScroll: 'ec-hidden-scroll',\n            highlight: 'ec-highlight',\n            icon: 'ec-icon',\n            line: 'ec-line',\n            lines: 'ec-lines',\n            minor: 'ec-minor',\n            nowIndicator: 'ec-now-indicator',\n            otherMonth: 'ec-other-month',\n            resource: 'ec-resource',\n            sidebar: 'ec-sidebar',\n            sidebarTitle: 'ec-sidebar-title',\n            today: 'ec-today',\n            time: 'ec-time',\n            title: 'ec-title',\n            toolbar: 'ec-toolbar',\n            view: '',\n            weekdays: ['ec-sun', 'ec-mon', 'ec-tue', 'ec-wed', 'ec-thu', 'ec-fri', 'ec-sat'],\n            withScroll: 'ec-with-scroll'\n        },\n        titleFormat: {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric'\n        },\n        validRange: undefined,\n        view: undefined,\n        viewDidMount: undefined,\n        views: {}\n    };\n\n    for (let plugin of plugins) {\n        plugin.createOptions?.(options);\n    }\n\n    return options;\n}\n\nexport function createParsers(plugins) {\n    let parsers = {\n        date: date => setMidnight(createDate(date)),\n        duration: createDuration,\n        events: createEvents,\n        eventSources: createEventSources,\n        hiddenDays: days => [...new Set(days)],\n        highlightedDates: dates => dates.map(date => setMidnight(createDate(date))),\n        resources: createResources,\n        scrollTime: createDuration,\n        slotDuration: createDuration,\n        slotLabelInterval: input => input !== undefined ? createDuration(input) : undefined,\n        slotMaxTime: createDuration,\n        slotMinTime: createDuration,\n        validRange: createDateRange\n    };\n\n    for (let plugin of plugins) {\n        plugin.createParsers?.(parsers);\n    }\n\n    return parsers;\n}\n\nexport function diff(options, prevOptions) {\n    let diff = [];\n    for (let key of keys(options)) {\n        if (options[key] !== prevOptions[key]) {\n            diff.push([key, options[key]]);\n        }\n    }\n    return diff;\n}\n", "import {derived, get, readable, writable} from 'svelte/store';\nimport {\n    addDay, addDuration, assign, cloneDate, createDate, createEvents, createView, DAY_IN_SECONDS, debounce,\n    isFunction, nextClosestDay, prevClosestDay, setMidnight, subtractDay, toISOString, toLocalDate\n} from '#lib';\n\nexport function dayGrid(state) {\n    return derived(state.view, $view => $view?.startsWith('dayGrid'));\n}\n\nexport function activeRange(state) {\n    return derived(\n        [state._currentRange, state.firstDay, state.slotMaxTime, state._dayGrid],\n        ([$_currentRange, $firstDay, $slotMaxTime, $_dayGrid]) => {\n            let start = cloneDate($_currentRange.start);\n            let end = cloneDate($_currentRange.end);\n\n            if ($_dayGrid) {\n                // First day of week\n                prevClosestDay(start, $firstDay);\n                nextClosestDay(end, $firstDay);\n            } else if ($slotMaxTime.days || $slotMaxTime.seconds > DAY_IN_SECONDS) {\n                addDuration(subtractDay(end), $slotMaxTime);\n                let start2 = subtractDay(cloneDate(end));\n                if (start2 < start) {\n                    start = start2;\n                }\n            }\n\n            return {start, end};\n        }\n    );\n}\n\nexport function currentRange(state) {\n    return derived(\n        [state.date, state.duration, state.firstDay],\n        ([$date, $duration, $firstDay]) => {\n            let start = cloneDate($date), end;\n            if ($duration.months) {\n                start.setUTCDate(1);\n            } else if ($duration.inWeeks) {\n                // First day of week\n                prevClosestDay(start, $firstDay);\n            }\n            end = addDuration(cloneDate(start), $duration);\n\n            return {start, end};\n        }\n    );\n}\n\nexport function viewDates(state) {\n    return derived([state._activeRange, state.hiddenDays], ([$_activeRange, $hiddenDays]) => {\n        let dates = [];\n        let date = setMidnight(cloneDate($_activeRange.start));\n        let end = setMidnight(cloneDate($_activeRange.end));\n        while (date < end) {\n            if (!$hiddenDays.includes(date.getUTCDay())) {\n                dates.push(cloneDate(date));\n            }\n            addDay(date);\n        }\n        if (!dates.length && $hiddenDays.length && $hiddenDays.length < 7) {\n            // Try to move the date\n            state.date.update(date => {\n                while ($hiddenDays.includes(date.getUTCDay())) {\n                    addDay(date);\n                }\n                return date;\n            });\n            dates = get(state._viewDates);\n        }\n\n        return dates;\n    });\n}\n\nexport function viewTitle(state) {\n    return derived(\n        [state.date, state._activeRange, state._intlTitle, state._dayGrid],\n        ([$date, $_activeRange, $_intlTitle, $_dayGrid]) => {\n            return $_dayGrid\n                ? $_intlTitle.formatRange($date, $date)\n                : $_intlTitle.formatRange($_activeRange.start, subtractDay(cloneDate($_activeRange.end)));\n        }\n    );\n}\n\nexport function view(state) {\n    return derived([state.view, state._viewTitle, state._currentRange, state._activeRange], args => createView(...args));\n}\n\nexport function events(state) {\n    let _events = writable([]);\n    let abortController;\n    let fetching = 0;\n    let debounceHandle = {};\n    derived(\n        [state.events, state.eventSources, state._activeRange, state._fetchedRange, state.lazyFetching, state.loading],\n        (values, set) => debounce(() => {\n            let [$events, $eventSources, $_activeRange, $_fetchedRange, $lazyFetching, $loading] = values;\n            if (!$eventSources.length) {\n                set($events);\n                return;\n            }\n            // Do not fetch if new range is within the previous one\n            if (!$_fetchedRange.start || $_fetchedRange.start > $_activeRange.start || $_fetchedRange.end < $_activeRange.end || !$lazyFetching) {\n                if (abortController) {\n                    // Abort previous request\n                    abortController.abort();\n                }\n                // Create new abort controller\n                abortController = new AbortController();\n                // Call loading hook\n                if (isFunction($loading) && !fetching) {\n                    $loading(true);\n                }\n                let stopLoading = () => {\n                    if (--fetching === 0 && isFunction($loading)) {\n                        $loading(false);\n                    }\n                };\n                let events = [];\n                // Prepare handlers\n                let failure = e => stopLoading();\n                let success = data => {\n                    events = events.concat(createEvents(data));\n                    set(events);\n                    stopLoading();\n                };\n                // Prepare other stuff\n                let startStr = toISOString($_activeRange.start)\n                let endStr = toISOString($_activeRange.end);\n                // Loop over event sources\n                for (let source of $eventSources) {\n                    if (isFunction(source.events)) {\n                        // Events as a function\n                        let result = source.events({\n                            start: toLocalDate($_activeRange.start),\n                            end: toLocalDate($_activeRange.end),\n                            startStr,\n                            endStr\n                        }, success, failure);\n                        if (result !== undefined) {\n                            Promise.resolve(result).then(success, failure);\n                        }\n                    } else {\n                        // Events as a JSON feed\n                        // Prepare params\n                        let params = isFunction(source.extraParams) ? source.extraParams() : assign({}, source.extraParams);\n                        params.start = startStr;\n                        params.end = endStr;\n                        params = new URLSearchParams(params);\n                        // Prepare fetch\n                        let url = source.url, headers = {}, body;\n                        if (['GET', 'HEAD'].includes(source.method)) {\n                            url += (url.includes('?') ? '&' : '?') + params;\n                        } else {\n                            headers['content-type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n                            body = String(params);  // Safari 10.1 doesn't convert to string automatically\n                        }\n                        // Do the fetch\n                        fetch(url, {method: source.method, headers, body, signal: abortController.signal, credentials: 'same-origin'})\n                            .then(response => response.json())\n                            .then(success)\n                            .catch(failure);\n                    }\n                    ++fetching;\n                }\n                // Save current range for future requests\n                $_fetchedRange.start = $_activeRange.start;\n                $_fetchedRange.end = $_activeRange.end;\n            }\n        }, debounceHandle, state._queue),\n        []\n    ).subscribe(_events.set);\n\n    return _events;\n}\n\nexport function filteredEvents(state){\n    let view;\n    state._view.subscribe($_view => view = $_view);\n    let debounceHandle = {};\n    return derived(\n        [state._events, state.eventFilter],\n        (values, set) => debounce(() => {\n            let [$_events, $eventFilter] = values;\n            set(\n                isFunction($eventFilter)\n                    ? $_events.filter((event, index, events) => $eventFilter({\n                        event,\n                        index,\n                        events,\n                        view\n                    }))\n                    : $_events\n            );\n        }, debounceHandle, state._queue),\n        []\n    );\n}\n\nexport function now() {\n    return readable(createDate(), set => {\n        let interval = setInterval(() => {\n            set(createDate());\n        }, 1000);\n\n        return () => clearInterval(interval);\n    });\n}\n\nexport function today(state) {\n    return derived(state._now, $_now => setMidnight(cloneDate($_now)));\n}\n", "import {get, writable} from 'svelte/store';\nimport {tick} from 'svelte';\nimport {createOptions, createParsers} from './options.js';\nimport {activeRange, currentRange, dayGrid, events, now, today, view as view2, viewDates, viewTitle, filteredEvents} from './stores.js';\nimport {identity, intl, intlRange, isFunction, keys, toViewWithLocalDates} from '#lib';\n\nexport default class {\n    constructor(plugins, input) {\n        plugins = plugins || [];\n\n        // Create options\n        let options = createOptions(plugins);\n        let parsers = createParsers(plugins);\n\n        // Parse options\n        options = parseOpts(options, parsers);\n        input = parseOpts(input, parsers);\n\n        // Create stores for options\n        for (let [option, value] of Object.entries(options)) {\n            this[option] = writable(value);\n        }\n\n        // Private stores\n        this._queue = writable(new Map());  // debounce queue (beforeUpdate)\n        this._tasks = new Map();  // timeout IDs for tasks\n        this._auxiliary = writable([]);  // auxiliary components\n        this._dayGrid = dayGrid(this);\n        this._currentRange = currentRange(this);\n        this._activeRange = activeRange(this);\n        this._fetchedRange = writable({start: undefined, end: undefined});\n        this._events = events(this);\n        this._now = now();\n        this._today = today(this);\n        this._intlEventTime = intlRange(this.locale, this.eventTimeFormat);\n        this._intlSlotLabel = intl(this.locale, this.slotLabelFormat);\n        this._intlDayHeader = intl(this.locale, this.dayHeaderFormat);\n        this._intlDayHeaderAL = intl(this.locale, this.dayHeaderAriaLabelFormat);\n        this._intlTitle = intlRange(this.locale, this.titleFormat);\n        this._bodyEl = writable(undefined);\n        this._scrollable = writable(false);\n        this._recheckScrollable = writable(false);\n        this._viewTitle = viewTitle(this);\n        this._viewDates = viewDates(this);\n        this._view = view2(this);\n        this._viewComponent = writable(undefined);\n        this._filteredEvents = filteredEvents(this);\n        // Interaction\n        this._interaction = writable({});\n        this._iEvents = writable([null, null]);  // interaction events: [drag/resize, pointer]\n        this._iClasses = writable(identity);  // interaction event css classes\n        this._iClass = writable(undefined);  // interaction css class for entire calendar\n\n        // Set & Get\n        this._set = (key, value) => {\n            if (validKey(key, this)) {\n                if (parsers[key]) {\n                    value = parsers[key](value);\n                }\n                this[key].set(value);\n            }\n        };\n        this._get = key => validKey(key, this) ? get(this[key]) : undefined;\n\n        // Let plugins create their private stores\n        for (let plugin of plugins) {\n            plugin.createStores?.(this);\n        }\n\n        if (input.view) {\n            // Set initial view based on input\n            this.view.set(input.view);\n        }\n\n        // Set options for each view\n        let views = new Set([...keys(options.views), ...keys(input.views ?? {})]);\n        for (let view of views) {\n            let defOpts = mergeOpts(options, options.views[view] ?? {});\n            let opts = mergeOpts(defOpts, input, input.views?.[view] ?? {});\n            let component = opts.component;\n            // Make sure we deal with valid opts from now on\n            filterOpts(opts, this);\n            // Process options\n            for (let key of keys(opts)) {\n                let {set, _set = set, ...rest} = this[key];\n\n                this[key] = {\n                    // Set value in all views\n                    set: ['buttonText', 'theme'].includes(key)\n                        ? value => {\n                            if (isFunction(value)) {\n                                let result = value(defOpts[key]);\n                                opts[key] = result;\n                                set(set === _set ? result : value);\n                            } else {\n                                opts[key] = value;\n                                set(value);\n                            }\n                        }\n                        : value => {\n                            opts[key] = value;\n                            set(value);\n                        },\n                    _set,\n                    ...rest\n                };\n            }\n            // When view changes...\n            this.view.subscribe(newView => {\n                if (newView === view) {\n                    // switch view component\n                    this._viewComponent.set(component);\n                    if (isFunction(opts.viewDidMount)) {\n                        tick().then(() => opts.viewDidMount({\n                            view: toViewWithLocalDates(get(this._view))\n                        }));\n                    }\n                    // update store values\n                    for (let key of keys(opts)) {\n                        this[key]._set(opts[key]);\n                    }\n                }\n            });\n        }\n    }\n}\n\nfunction parseOpts(opts, parsers) {\n    let result = {...opts};\n    for (let key of keys(parsers)) {\n        if (key in result) {\n            result[key] = parsers[key](result[key]);\n        }\n    }\n    if (opts.views) {\n        result.views = {};\n        for (let view of keys(opts.views)) {\n            result.views[view] = parseOpts(opts.views[view], parsers);\n        }\n    }\n    return result;\n}\n\nfunction mergeOpts(...args) {\n    let result = {};\n    for (let opts of args) {\n        let override = {};\n        for (let key of ['buttonText', 'theme']) {\n            if (isFunction(opts[key])) {\n                override[key] = opts[key](result[key]);\n            }\n        }\n        result = {\n            ...result,\n            ...opts,\n            ...override\n        };\n    }\n    return result;\n}\n\nfunction filterOpts(opts, state) {\n    keys(opts)\n        .filter(key => !validKey(key, state) || key === 'view')\n        .forEach(key => delete opts[key]);\n}\n\nfunction validKey(key, state) {\n    return state.hasOwnProperty(key) && key[0] !== '_';\n}\n", "<script>\n    import {getContext, tick} from 'svelte';\n    import {createDate, cloneDate, setContent, setMidnight, nextDate, prevDate, outsideRange} from '#lib';\n\n    export let buttons;\n\n    let {\n        _currentRange, _viewTitle, _viewDates, buttonText, customButtons, date, duration, hiddenDays, theme, validRange,\n        view\n    } = getContext('state');\n\n    let today = setMidnight(createDate());\n    let prevDisabled, nextDisabled, todayDisabled;\n\n    let running = false;\n    function isRunning() {\n        return running;\n    }\n    $: if (!isRunning()) {\n        running = true;\n        prevDisabled = false;\n        nextDisabled = false;\n        if ($validRange.start) {\n            let currentDate = cloneDate($date);\n            $date = prevDate($date, $duration, $hiddenDays);\n            prevDisabled = test();\n            $date = currentDate;\n        }\n        if ($validRange.end) {\n            let currentDate = cloneDate($date);\n            $date = nextDate($date, $duration);\n            nextDisabled = test();\n            $date = currentDate;\n        }\n        todayDisabled = today >= $_currentRange.start && today < $_currentRange.end;\n        if (!todayDisabled && ($validRange.start || $validRange.end)) {\n            let currentDate = cloneDate($date);\n            $date = cloneDate(today);\n            todayDisabled = test();\n            $date = currentDate;\n        }\n        tick().then(() => running = false);\n    }\n\n    function test() {\n        return $_viewDates.every(date => outsideRange(date, $validRange));\n    }\n\n    function prev() {\n        $date = prevDate($date, $duration, $hiddenDays);\n    }\n\n    function next() {\n        $date = nextDate($date, $duration);\n    }\n</script>\n\n{#each buttons as button}\n    {#if button == 'title'}\n        <!-- svelte-ignore a11y-missing-content -->\n        <h2 class=\"{$theme.title}\" use:setContent={$_viewTitle}></h2>\n    {:else if button == 'prev'}\n        <button\n            class=\"{$theme.button} ec-{button}\"\n            aria-label={$buttonText.prev}\n            title={$buttonText.prev}\n            on:click={prev}\n            disabled={prevDisabled}\n        ><i class=\"{$theme.icon} ec-{button}\"></i></button>\n    {:else if button == 'next'}\n        <button\n            class=\"{$theme.button} ec-{button}\"\n            aria-label={$buttonText.next}\n            title={$buttonText.next}\n            on:click={next}\n            disabled={nextDisabled}\n        ><i class=\"{$theme.icon} ec-{button}\"></i></button>\n    {:else if button == 'today'}\n        <button\n            class=\"{$theme.button} ec-{button}\"\n            on:click={() => $date = cloneDate(today)}\n            disabled={todayDisabled}\n        >{$buttonText[button]}</button>\n    {:else if $customButtons[button]}\n        <!-- svelte-ignore a11y_consider_explicit_label -->\n        <button\n            class=\"{$theme.button} ec-{button}{$customButtons[button].active ? ' ' + $theme.active : ''}\"\n            on:click={$customButtons[button].click}\n            use:setContent={$customButtons[button].text}\n        ></button>\n    {:else if button != ''}\n        <button\n            class=\"{$theme.button}{$view === button ? ' ' + $theme.active : ''} ec-{button}\"\n            on:click={() => $view = button}\n        >{$buttonText[button]}</button>\n    {/if}\n{/each}\n", "<script>\n    import {getContext} from 'svelte';\n    import {keys} from '#lib';\n    import Buttons from './Buttons.svelte';\n\n    let {headerToolbar, theme} = getContext('state');\n\n    let sections = $derived.by(() => {\n        let sections = {};\n        for (let key of ['start', 'center', 'end']) {\n            sections[key] = $headerToolbar[key]?.split(' ').map(group => group.split(',')) ?? [];\n        }\n        return sections;\n    });\n</script>\n\n<nav class=\"{$theme.toolbar}\">\n    {#each keys(sections) as key}\n        <div class=\"ec-{key}\">\n            {#each sections[key] as buttons}\n                {#if buttons.length > 1}\n                    <div class=\"{$theme.buttonGroup}\">\n                        <Buttons {buttons}/>\n                    </div>\n                {:else}\n                    <Buttons {buttons}/>\n                {/if}\n            {/each}\n        </div>\n    {/each}\n</nav>\n", "<script>\n    import {getContext, untrack} from 'svelte';\n    import {\n        toISOString, toLocalDate, toViewWithLocalDates, isFunction, task, flushDebounce, hasYScroll\n    } from '#lib';\n\n    let {\n        datesSet, eventAllUpdated, _auxiliary, _activeRange, _filteredEvents, _scrollable, _bodyEl, _tasks, _recheckScrollable,\n        _queue, _view\n    } = getContext('state');\n\n    // datesSet callback\n    $effect(() => {\n        $_activeRange;\n        untrack(() => {\n            if (isFunction($datesSet)) {\n                $datesSet({\n                    start: toLocalDate($_activeRange.start),\n                    end: toLocalDate($_activeRange.end),\n                    startStr: toISOString($_activeRange.start),\n                    endStr: toISOString($_activeRange.end),\n                    view: toViewWithLocalDates($_view)\n                });\n            }\n        });\n    });\n\n    // eventAllUpdated callback\n    $effect(() => {\n        $_filteredEvents;\n        untrack(() => {\n            if (isFunction($eventAllUpdated)) {\n                task(() => $eventAllUpdated({view: toViewWithLocalDates($_view)}), 'eau', _tasks);\n            }\n        });\n    });\n\n    $effect(() => {\n        $_queue;\n        untrack(() => {\n            flushDebounce($_queue);\n        });\n    });\n\n    $effect(() => {\n        $_recheckScrollable;\n        untrack(() => {\n            if ($_bodyEl) {\n                $_scrollable = hasYScroll($_bodyEl);\n            }\n            $_recheckScrollable = false;\n        });\n    });\n</script>\n\n{#each $_auxiliary as Component}\n    <Component/>\n{/each}\n", "import {derived} from 'svelte/store';\nimport {cloneDate, addDay, subtractDay} from '#lib';\n\nexport function days(state) {\n    return derived([state.date, state.firstDay, state.hiddenDays], ([$date, $firstDay, $hiddenDays]) => {\n        let days = [];\n        let day = cloneDate($date);\n        let max = 7;\n        // First day of week\n        while (day.getUTCDay() !== $firstDay && max) {\n            subtractDay(day);\n            --max;\n        }\n        for (let i = 0; i < 7; ++i) {\n            if (!$hiddenDays.includes(day.getUTCDay())) {\n                days.push(cloneDate(day));\n            }\n            addDay(day);\n        }\n\n        return days;\n    });\n}\n", "<script>\n    import {getContext} from 'svelte';\n    import {setContent} from '#lib';\n\n    let {theme, _intlDayHeader, _intlDayHeaderAL, _days} = getContext('state');\n</script>\n\n<div class=\"{$theme.header}\">\n    <div class=\"{$theme.days}\" role=\"row\">\n        {#each $_days as day}\n            <div class=\"{$theme.day} {$theme.weekdays?.[day.getUTCDay()]}\" role=\"columnheader\">\n                <span\n                    aria-label=\"{$_intlDayHeaderAL.format(day)}\"\n                    use:setContent={$_intlDayHeader.format(day)}\n                ></span>\n            </div>\n        {/each}\n    </div>\n    <div class=\"{$theme.hiddenScroll}\"></div>\n</div>\n", "<script>\n    import {getContext, onMount} from 'svelte';\n    import {\n        bgEvent, createEventClasses, createEventContent, entries, helperEvent, identity, isFunction, keyEnter,\n        resourceBackgroundColor, resourceTextColor, setContent, toEventWithLocalDates, toViewWithLocalDates\n    } from '#lib';\n\n    let {\n        el = $bindable(),\n        chunk,\n        classes = identity,\n        styles = identity,\n        onpointerdown,\n        body\n    } = $props();\n\n    let {\n        displayEventEnd, eventBackgroundColor, eventColor, eventContent, eventClick, eventDidMount, eventClassNames,\n        eventMouseEnter, eventMouseLeave, eventTextColor, resources, theme, _view, _intlEventTime\n    } = getContext('state');\n\n    let event = $derived(chunk.event);\n    let display = $derived(chunk.event.display);\n\n    // Style\n    let bgColor = $derived(event.backgroundColor ?? resourceBackgroundColor(event, $resources) ?? $eventBackgroundColor ?? $eventColor);\n    let txtColor = $derived(event.textColor ?? resourceTextColor(event, $resources) ?? $eventTextColor);\n    let style = $derived(entries(styles(\n        {'background-color': bgColor, 'color': txtColor}\n    )).map(entry => `${entry[0]}:${entry[1]}`).concat(event.styles).join(';'));\n\n    // Class\n    let classNames = $derived(classes([\n        bgEvent(display) ? $theme.bgEvent : $theme.event,\n        ...createEventClasses($eventClassNames, event, $_view)\n    ]).join(' '));\n\n    // Content\n    let [timeText, content] = $derived(createEventContent(\n        chunk, $displayEventEnd, $eventContent, $theme, $_intlEventTime, $_view\n    ));\n\n    onMount(() => {\n        if (isFunction($eventDidMount)) {\n            $eventDidMount({\n                event: toEventWithLocalDates(event),\n                timeText,\n                el,\n                view: toViewWithLocalDates($_view)\n            });\n        }\n    });\n\n    function createHandler(fn, display) {\n        return !helperEvent(display) && isFunction(fn)\n            ? jsEvent => fn({event: toEventWithLocalDates(event), el, jsEvent, view: toViewWithLocalDates($_view)})\n            : undefined;\n    }\n\n    // Handlers\n    let onclick = $derived(!bgEvent(display) && createHandler($eventClick, display) || undefined);\n    let onkeydown = $derived(onclick && keyEnter(onclick));\n    let onmouseenter = $derived(createHandler($eventMouseEnter, display));\n    let onmouseleave = $derived(createHandler($eventMouseLeave, display));\n</script>\n\n<!-- svelte-ignore a11y_no_noninteractive_tabindex -->\n<article\n    bind:this={el}\n    class={classNames}\n    {style}\n    role={onclick ? 'button' : undefined}\n    tabindex={onclick ? 0 : undefined}\n    {onclick}\n    {onkeydown}\n    {onmouseenter}\n    {onmouseleave}\n    {onpointerdown}\n>\n    {#snippet defaultBody()}\n        <div class={$theme.eventBody} use:setContent={content}></div>\n    {/snippet}\n    {#if body}\n        {@render body(defaultBody, bgColor, txtColor)}\n    {:else}\n        {@render defaultBody()}\n    {/if}\n</article>\n", "<script>\n    import {getContext} from 'svelte';\n    import BaseEvent from './BaseEvent.svelte';\n    import {bgEvent, helperEvent} from \"#lib\";\n\n    let {\n        el = $bindable(),\n        chunk,\n        styles,\n        axis,\n        forceDate,\n        forceMargin\n    } = $props();\n\n    let {_interaction, _iClasses} = getContext('state');\n\n    let event = $derived(chunk.event);\n    let display = $derived(chunk.event.display);\n\n    // Class\n    let classes = $derived(classNames => $_iClasses(classNames, event));\n\n    function createDragHandler(event) {\n        return $_interaction.action?.draggable(event)\n            ? jsEvent => $_interaction.action.drag(\n                event, jsEvent, forceDate?.(), forceMargin?.()\n            )\n            : $_interaction.action?.noAction;\n    }\n    let onpointerdown = $derived(!bgEvent(display) && !helperEvent(display) ? createDragHandler(event) : undefined);\n\n    let Resizer = $derived($_interaction.resizer);\n</script>\n\n<BaseEvent bind:el {chunk} {classes} {styles} {onpointerdown}>\n    {#snippet body(defaultBody)}\n        {#if Resizer}\n            <Resizer {chunk} {axis} {forceDate} {forceMargin}>\n                {@render defaultBody()}\n            </Resizer>\n        {:else}\n            {@render defaultBody()}\n        {/if}\n    {/snippet}\n</BaseEvent>\n", "<script>\n    import {getContext} from 'svelte';\n    import {ancestor, bgEvent, height, max, rect, repositionEvent} from '#lib';\n    import {InteractableEvent} from '#components';\n\n    let {chunk, longChunks = {}, inPopup = false, dates = []} = $props();\n\n    let {dayMaxEvents, _hiddenEvents, _popupDate} = getContext('state');\n\n    let el = $state();\n    let margin = $state(1);\n    let hidden = $state(false);\n\n    let event = $derived(chunk.event);\n    let display = $derived(chunk.event.display);\n\n    // Style\n    let styles = $derived(style => {\n        if (bgEvent(display)) {\n            style['width'] = `calc(${chunk.days * 100}% + ${(chunk.days - 1)}px)`;\n        } else {\n            let marginTop = margin;\n            if (event._margin) {\n                // Force margin for helper events\n                let [_margin, _dates] = event._margin;\n                if (chunk.date >= _dates[0] && chunk.date <= _dates.at(-1)) {\n                    marginTop = _margin;\n                }\n            }\n            style['width'] = `calc(${chunk.days * 100}% + ${(chunk.days - 1) * 7}px)`;\n            style['margin-top'] = `${marginTop}px`;\n        }\n        if (hidden) {\n            style['visibility'] = 'hidden';\n        }\n        return style;\n    });\n\n    export function reposition() {\n        margin = repositionEvent(chunk, longChunks, height(el));\n        if ($dayMaxEvents === true) {\n            hide();\n        } else {\n            hidden = false;\n        }\n    }\n\n    function hide() {\n        let dayEl = ancestor(el, 2);\n        let h = height(dayEl) - height(dayEl.firstElementChild) - footHeight(dayEl);\n        hidden = chunk.bottom > h;\n        let update = false;\n        // Hide or show the event throughout all days\n        for (let date of chunk.dates) {\n            let hiddenEvents = $_hiddenEvents[date.getTime()];\n            if (hiddenEvents) {\n                let size = hiddenEvents.size;\n                if (hidden) {\n                    hiddenEvents.add(chunk.event);\n                } else {\n                    hiddenEvents.delete(chunk.event);\n                }\n                if (size !== hiddenEvents.size) {\n                    update = true;\n                }\n            }\n        }\n        if (update) {\n            $_hiddenEvents = $_hiddenEvents;\n        }\n    }\n\n    function footHeight(dayEl) {\n        let h = 0;\n        for (let i = 0; i < chunk.days; ++i) {\n            h = max(h, height(dayEl.lastElementChild));\n            dayEl = dayEl.nextElementSibling;\n            if (!dayEl) {\n                break;\n            }\n        }\n        return h;\n    }\n</script>\n\n<InteractableEvent\n    bind:el\n    {chunk}\n    {styles}\n    axis=\"x\"\n    forceDate={() => inPopup ? $_popupDate : undefined}\n    forceMargin={() => [rect(el).top - rect(ancestor(el, 1)).top, dates]}\n/>\n", "<script>\n    import {getContext, tick, untrack} from 'svelte';\n    import {ancestor, rect, setContent, outsideEvent, keyEnter, toISOString, stopPropagation} from '#lib';\n    import Event from './Event.svelte';\n\n    let {buttonText, theme, _interaction, _intlDayPopover, _popupDate, _popupChunks} = getContext('state');\n\n    let el = $state();\n    let style = $state('');\n\n    function position() {\n        let dayEl = ancestor(el, 1);\n        let bodyEl = ancestor(dayEl, 3);\n        let popupRect = rect(el);\n        let dayRect = rect(dayEl);\n        let bodyRect = rect(bodyEl);\n        style = '';\n\n        let left;\n        if (popupRect.width >= bodyRect.width) {\n            left = bodyRect.left - dayRect.left;\n            let right = dayRect.right - bodyRect.right;\n            style += `right:${right}px;`;\n        } else {\n            left = (dayRect.width - popupRect.width) / 2;\n            if (dayRect.left + left < bodyRect.left) {\n                left = bodyRect.left - dayRect.left;\n            } else if (dayRect.left + left + popupRect.width > bodyRect.right) {\n                left = bodyRect.right - dayRect.left - popupRect.width;\n            }\n        }\n        style += `left:${left}px;`;\n\n        let top;\n        if (popupRect.height >= bodyRect.height) {\n            top = bodyRect.top - dayRect.top;\n            let bottom = dayRect.bottom - bodyRect.bottom;\n            style += `bottom:${bottom}px;`;\n        } else {\n            top = (dayRect.height - popupRect.height) / 2;\n            if (dayRect.top + top < bodyRect.top) {\n                top = bodyRect.top - dayRect.top;\n            } else if (dayRect.top + top + popupRect.height > bodyRect.bottom) {\n                top = bodyRect.bottom - dayRect.top - popupRect.height;\n            }\n        }\n        style += `top:${top}px;`;\n    }\n\n    $effect(() => {\n        // Fire reposition only on popup chunks change\n        $_popupChunks;\n        // Let chunks to update/mount then position the popup\n        tick().then(reposition);\n    });\n    function reposition() {\n        if ($_popupChunks.length) {\n            position();\n        } else {\n            close();\n        }\n    }\n\n    function close() {\n        $_popupDate = null;\n        $_popupChunks = [];\n    }\n\n    function handlePointerDownOutside() {\n        close();\n        $_interaction.action?.noClick();\n    }\n</script>\n\n<div\n    bind:this={el}\n    class=\"{$theme.popup}\"\n    {style}\n    use:outsideEvent={'pointerdown'}\n    onpointerdown={stopPropagation()}\n    onpointerdownoutside={handlePointerDownOutside}\n>\n    <div class=\"{$theme.dayHead}\">\n        <time datetime=\"{toISOString($_popupDate, 10)}\" use:setContent={$_intlDayPopover.format($_popupDate)}></time>\n        <!-- svelte-ignore a11y_missing_attribute -->\n        <a\n            role=\"button\"\n            tabindex=\"0\"\n            aria-label={$buttonText.close}\n            onclick={stopPropagation(close)}\n            onkeydown={keyEnter(close)}\n        >&times;</a>\n    </div>\n    <div class=\"{$theme.events}\">\n        {#each $_popupChunks as chunk (chunk.event)}\n            <Event {chunk} inPopup />\n        {/each}\n    </div>\n</div>\n", "<script>\n    import {getContext, onMount, tick, untrack} from 'svelte';\n    import {SvelteSet} from 'svelte/reactivity';\n    import {\n        addDay, assign, cloneDate, createEventChunk, datesEqual, getWeekNumber, isFunction, keyEnter, outsideRange,\n        runReposition, setContent, setPayload, toISOString, toLocalDate, stopPropagation\n    } from '#lib';\n    import Event from './Event.svelte';\n    import Popup from './Popup.svelte';\n\n    let {date, chunks, bgChunks, longChunks, iChunks = [], dates} = $props();\n\n    let {\n        date: currentDate, dayMaxEvents, highlightedDates, firstDay, moreLinkContent, theme, validRange, weekNumbers,\n        weekNumberContent, _hiddenEvents, _intlDayCell, _popupDate, _popupChunks, _today, _interaction\n    } = getContext('state');\n\n    let el = $state();\n    let hiddenEvents = new SvelteSet();  // hidden events of this day\n    $effect.pre(() => {\n        $_hiddenEvents[date.getTime()] = untrack(() => hiddenEvents);\n    });\n    let refs = [];\n    let isToday = $derived(datesEqual(date, $_today));\n    let otherMonth = $derived(date.getUTCMonth() !== $currentDate.getUTCMonth());\n    let highlight = $derived($highlightedDates.some(d => datesEqual(d, date)));\n    let disabled = $derived(outsideRange(date, $validRange));\n\n    let dayBgChunks = $derived(!disabled ? bgChunks.filter(bgChunk => datesEqual(bgChunk.date, date)) : []);\n    let dayChunks = $derived.by(() => {\n        let dayChunks = [];\n        if (!disabled) {\n            for (let chunk of chunks) {\n                if (datesEqual(chunk.date, date)) {\n                    dayChunks.push(chunk);\n                    // if ($dayMaxEvents !== false && dayChunks.length > $dayMaxEvents) {\n                    // \tchunk.hidden = true;\n                    // }\n                }\n            }\n        }\n        return dayChunks;\n    });\n    $effect.pre(() => {\n        dayChunks;\n        hiddenEvents.clear();\n    });\n\n    let moreLink = $derived.by(() => {\n        let moreLink = '';\n        if (!disabled && hiddenEvents.size) {\n            let text = '+' + hiddenEvents.size + ' more';\n            if ($moreLinkContent) {\n                moreLink = isFunction($moreLinkContent)\n                    ? $moreLinkContent({num: hiddenEvents.size, text})\n                    : $moreLinkContent;\n            } else {\n                moreLink = text;\n            }\n        }\n        return moreLink;\n    });\n\n    // dateFromPoint\n    onMount(() => {\n        setPayload(el, () => ({allDay: true, date, resource: undefined, dayEl: el, disabled}));\n    });\n\n    // Popup\n    function showMore() {\n        $_popupDate = date;\n    }\n    let showPopup = $derived($_popupDate && datesEqual(date, $_popupDate));\n    // Use `pre` to tick before popup positioning tick\n    $effect.pre(() => {\n        dayChunks;\n        longChunks;\n        if (showPopup) {\n            // Let chunks to reposition then set popup chunks\n            tick().then(setPopupChunks);\n        }\n    });\n    function setPopupChunks() {\n        let nextDay = addDay(cloneDate(date));\n        let chunks = dayChunks.concat(longChunks[date.getTime()]?.chunks || []);\n        $_popupChunks = chunks\n            .map(chunk => assign({}, chunk, createEventChunk(chunk.event, date, nextDay), {days: 1, dates: [date]}))\n            .sort((a, b) => a.top - b.top);\n    }\n\n    // Week numbers\n    let showWeekNumber = $derived($weekNumbers && date.getUTCDay() == ($firstDay ? 1 : 0));\n    let weekNumber = $derived.by(() => {\n        let weekNumber;\n        if (showWeekNumber) {\n            let week = getWeekNumber(date, $firstDay);\n            if ($weekNumberContent) {\n                weekNumber = isFunction($weekNumberContent)\n                    ? $weekNumberContent({date: toLocalDate(date), week})\n                    : $weekNumberContent;\n            } else {\n                weekNumber = 'W' + String(week).padStart(2, '0');\n            }\n        }\n        return weekNumber;\n    });\n\n    export function reposition() {\n        if (!disabled) {\n            runReposition(refs, dayChunks);\n        }\n    }\n</script>\n\n<div\n    bind:this={el}\n    class=\"{$theme.day} {$theme.weekdays?.[date.getUTCDay()]}{isToday ? ' ' + $theme.today : ''}{otherMonth ? ' ' + $theme.otherMonth : ''}{highlight ? ' ' + $theme.highlight : ''}{disabled ? ' ' + $theme.disabled : ''}\"\n    role=\"cell\"\n    onpointerdown={$_interaction.action?.select}\n>\n    <div class=\"{$theme.dayHead}\">\n        <time\n            datetime=\"{toISOString(date, 10)}\"\n            use:setContent={$_intlDayCell.format(date)}\n        ></time>\n        {#if showWeekNumber}\n            <span\n                class=\"{$theme.weekNumber}\"\n                use:setContent={weekNumber}\n            ></span>\n        {/if}\n    </div>\n    <div class=\"{$theme.bgEvents}\">\n        {#if !disabled}\n            {#each dayBgChunks as chunk (chunk.event)}\n                <Event {chunk}/>\n            {/each}\n        {/if}\n    </div>\n    {#if !disabled}\n        <!-- Pointer -->\n        {#if iChunks[2] && datesEqual(iChunks[2].date, date)}\n            <div class=\"{$theme.events}\">\n                <Event chunk={iChunks[2]}/>\n            </div>\n        {/if}\n        <!-- Drag & Resize -->\n        {#if iChunks[0] && datesEqual(iChunks[0].date, date)}\n            <div class=\"{$theme.events} {$theme.preview}\">\n                <Event chunk={iChunks[0]}/>\n            </div>\n        {/if}\n    {/if}\n    <div class=\"{$theme.events}\">\n        {#if !disabled}\n            {#each dayChunks as chunk, i (chunk.event)}\n                <!-- svelte-ignore binding_property_non_reactive -->\n                <Event {chunk} {longChunks} {dates} bind:this={refs[i]}/>\n            {/each}\n        {/if}\n    </div>\n    {#if showPopup}\n        <Popup/>\n    {/if}\n    <div class=\"{$theme.dayFoot}\">\n        {#if !disabled && hiddenEvents.size}\n            <!-- svelte-ignore a11y_missing_attribute -->\n            <!-- svelte-ignore a11y_missing_content -->\n            <!-- svelte-ignore a11y_consider_explicit_label -->\n            <a\n                role=\"button\"\n                tabindex=\"0\"\n                aria-haspopup=\"true\"\n                onclick={stopPropagation(showMore)}\n                onkeydown={keyEnter(showMore)}\n                onpointerdown={stopPropagation()}\n                use:setContent={moreLink}\n            ></a>\n        {/if}\n    </div>\n</div>\n", "<script>\n    import {getContext} from 'svelte';\n    import {\n        addDay, bgEvent, cloneDate, createEventChunk, eventIntersects, limitToRange, prepareEventChunks,\n        runReposition\n    } from '#lib';\n    import Day from './Day.svelte';\n\n    let {dates} = $props();\n\n    let {_filteredEvents, _iEvents,\n        resources, filterEventsWithResources, hiddenDays, theme, validRange } = getContext('state');\n\n    let refs = [];\n\n    let start = $derived(limitToRange(dates[0], $validRange));\n    let end = $derived(addDay(cloneDate(limitToRange(dates.at(-1), $validRange))));\n\n    let [chunks, bgChunks, longChunks] = $derived.by(() => {\n        let chunks = [];\n        let bgChunks = [];\n        for (let event of $_filteredEvents) {\n            if (eventIntersects(event, start, end, $filterEventsWithResources ? $resources : undefined)) {\n                let chunk = createEventChunk(event, start, end);\n                if (bgEvent(event.display)) {\n                    if (event.allDay) {\n                        bgChunks.push(chunk);\n                    }\n                } else {\n                    chunks.push(chunk);\n                }\n            }\n        }\n        prepareEventChunks(bgChunks, $hiddenDays);\n        let longChunks = prepareEventChunks(chunks, $hiddenDays);\n        return [chunks, bgChunks, longChunks];\n    });\n\n    let iChunks = $derived($_iEvents.map(event => {\n        let chunk;\n        if (event && eventIntersects(event, start, end)) {\n            chunk = createEventChunk(event, start, end);\n            prepareEventChunks([chunk], $hiddenDays);\n        } else {\n            chunk = null;\n        }\n        return chunk;\n    }));\n\n    export function reposition() {\n        runReposition(refs, dates);\n    }\n</script>\n\n<div class=\"{$theme.days}\" role=\"row\">\n    {#each dates as date, i}\n        <!-- svelte-ignore binding_property_non_reactive -->\n        <Day {date} {chunks} {bgChunks} {longChunks} {iChunks} {dates} bind:this={refs[i]} />\n    {/each}\n</div>\n", "<script>\n    import {getContext, untrack} from 'svelte';\n    import {runReposition, observeResize} from '#lib';\n    import Week from './Week.svelte';\n\n    let {\n        _bodyEl, _viewDates, _filteredEvents, _hiddenEvents, _recheckScrollable, dayMaxEvents, hiddenDays, theme\n    } = getContext('state');\n\n    let refs = [];\n\n    let days = $derived(7 - $hiddenDays.length);\n    let weeks = $derived.by(() => {\n        let weeks = [];\n        for (let i = 0; i < $_viewDates.length / days; ++i) {\n            let dates = [];\n            for (let j = 0; j < days; ++j) {\n                dates.push($_viewDates[i * days + j]);\n            }\n            weeks.push(dates);\n        }\n        return weeks;\n    });\n    $effect.pre(() => {\n        weeks;\n        $dayMaxEvents;\n        $_hiddenEvents = {};\n    });\n\n    function reposition() {\n        runReposition(refs, weeks);\n    }\n    $effect(() => {\n        $_filteredEvents;\n        $_hiddenEvents;\n        $dayMaxEvents;\n        untrack(reposition);\n    });\n</script>\n\n<div\n    bind:this={$_bodyEl}\n    class=\"{$theme.body}{$dayMaxEvents === true ? ' ' + $theme.uniform : ''}\"\n    use:observeResize={() => $_recheckScrollable = true}\n>\n    <div class=\"{$theme.content}\">\n        {#each weeks as dates, i}\n            <!-- svelte-ignore binding_property_non_reactive -->\n            <Week {dates} bind:this={refs[i]}/>\n        {/each}\n    </div>\n</div>\n\n<svelte:window on:resize={reposition}/>\n", "<script>\n    import Header from './Header.svelte';\n    import Body from './Body.svelte';\n</script>\n\n<Header/>\n<Body/>\n", "import {writable} from 'svelte/store';\nimport {btnTextMonth, intl, themeView} from '#lib';\nimport {days} from './stores.js';\nimport View from './View.svelte';\n\nexport default {\n    createOptions(options) {\n        options.dayMaxEvents = false;\n        options.dayCellFormat = {day: 'numeric'};\n        options.dayPopoverFormat = {month: 'long', day: 'numeric', year: 'numeric'};\n        options.moreLinkContent = undefined;\n        options.weekNumbers = false;\n        options.weekNumberContent = undefined;\n        // Common options\n        options.buttonText.dayGridMonth = 'month';\n        options.buttonText.close = 'Close';\n        options.theme.uniform = 'ec-uniform';\n        options.theme.dayFoot = 'ec-day-foot';\n        options.theme.popup = 'ec-popup';\n        options.theme.weekNumber = 'ec-week-number';\n        options.view = 'dayGridMonth';\n        options.views.dayGridMonth = {\n            buttonText: btnTextMonth,\n            component: View,\n            dayHeaderFormat: {weekday: 'short'},\n            dayHeaderAriaLabelFormat: {weekday: 'long'},\n            displayEventEnd: false,\n            duration: {months: 1},\n            theme: themeView('ec-day-grid ec-month-view'),\n            titleFormat: {year: 'numeric', month: 'long'}\n        };\n    },\n\n    createStores(state) {\n        state._days = days(state);\n        state._intlDayCell = intl(state.locale, state.dayCellFormat);\n        state._intlDayPopover = intl(state.locale, state.dayPopoverFormat);\n        state._hiddenEvents = writable({});\n        state._popupDate = writable(null);\n        state._popupChunks = writable([]);\n    }\n}\n", "import {bgEvent, helperEvent} from '#lib';\n\nexport function eventDraggable(event, $eventStartEditable, $editable) {\n    return (event.startEditable ?? $eventStartEditable ?? event.editable ?? $editable);\n}\n\nexport function eventResizable(event, $eventDurationEditable, $editable) {\n    return (event.durationEditable ?? $eventDurationEditable ?? event.editable ?? $editable);\n}\n", "import {min, max} from '#lib';\n\nlet busy = false;\nexport function animate(fn) {\n    if (!busy) {\n        busy = true;\n        window.requestAnimationFrame(() => {\n            fn();\n            busy = false;\n        });\n    }\n}\n\nexport function limit(value, minLimit, maxLimit) {\n    return max(minLimit, min(maxLimit, value));\n}\n\nexport function draggable(event) {\n\n}\n", "<script>\n    import {getContext} from 'svelte';\n    import {\n        addDay, addDuration, ancestor, assign, cloneDate, cloneEvent, copyTime, createDuration, getElementWithPayload,\n        getPayload, isFunction, listen, listView, max, min, noop, rect, runAll, subtractDay, subtractDuration,\n        timelineView, toEventWithLocalDates, toISOString, toLocalDate, toViewWithLocalDates\n    } from '#lib';\n    import {animate, limit, eventDraggable} from './lib';\n\n    let {_iEvents, _iClass, _events, _view, _dayGrid, _bodyEl, datesAboveResources, dateClick, dragConstraint,\n        dragScroll, editable, eventStartEditable, eventDragMinDistance, eventDragStart, eventDragStop, eventDrop,\n        eventLongPressDelay, eventResizeStart, eventResizeStop, eventResize, longPressDelay, resizeConstraint,\n        selectable, select: selectFn, selectBackgroundColor, selectConstraint, selectLongPressDelay, selectMinDistance,\n        slotDuration, slotHeight, slotWidth, unselect: unselectFn, unselectAuto, unselectCancel, validRange,\n        view} = getContext('state');\n\n    const ACTION_DRAG = 1;\n    const ACTION_RESIZE_END = 2;\n    const ACTION_RESIZE_START = 3;\n    const ACTION_SELECT = 4;\n    const ACTION_CLICK = 5;\n    const ACTION_NO_ACTION = 6;\n    let action;\n    let interacting;\n    let event;\n    let display;\n    let date, newDate;\n    let resource, newResource;\n    let fromX, fromY;\n    let toX, toY;\n    let bodyEl, bodyRect, clipEl, clipRect;\n    let delta;\n    let allDay;\n    let iClass;\n    let minResize;  // minimum end time when resizing\n    let selectStep;  // minimum selection step\n    let selected;  // whether selection has been made\n    let noDateClick;  // do not perform date click\n    let timer;  // timer for long press delays\n    let viewport;\n    let margin;\n    let extraDuration;  // extra duration for zero duration events\n\n    export function draggable(event) {\n        return eventDraggable(event, $eventStartEditable, $editable);\n    }\n\n    export function drag(eventToDrag, jsEvent, forceDate, forceMargin) {\n        if (!action) {\n            action = validJsEvent(jsEvent) ? ACTION_DRAG : ACTION_NO_ACTION;\n\n            if (complexAction()) {\n                event = eventToDrag;\n\n                common(jsEvent);\n\n                if (forceDate) {\n                    // Force date in popup\n                    date = forceDate;\n                }\n\n                if (forceMargin) {\n                    margin = forceMargin;\n                }\n\n                iClass = 'dragging';\n\n                move(jsEvent);\n            }\n        }\n    }\n\n    export function resize(eventToResize, jsEvent, start, axis, forceDate, forceMargin, zeroDuration) {\n        if (!action) {\n            action = validJsEvent(jsEvent) ? (\n                start ? ACTION_RESIZE_START : ACTION_RESIZE_END\n            ) : ACTION_NO_ACTION;\n\n            if (complexAction()) {\n                event = eventToResize;\n\n                common(jsEvent);\n\n                if (forceDate) {\n                    // Force date in popup\n                    date = forceDate;\n                }\n\n                if (forceMargin) {\n                    margin = forceMargin;\n                }\n\n                iClass = axis === 'x' ? 'resizingX' : 'resizingY';\n\n                // Calculate the limits for resize\n                if (resizingStart()) {\n                    minResize = cloneDate(event.end);\n                    if (allDay) {\n                        copyTime(minResize, event.start);\n                        if (minResize >= event.end) {\n                            subtractDay(minResize);\n                        }\n                    } else {\n                        subtractDuration(minResize, $slotDuration);\n                        if (minResize < event.start) {\n                            minResize = event.start;\n                        }\n                        // Overwrite the date due to possible discrepancy between calculated date\n                        // and resizer coordinates in browser\n                        date = event.start;\n                    }\n                } else {\n                    minResize = cloneDate(event.start);\n                    if (allDay) {\n                        copyTime(minResize, event.end);\n                        if (minResize <= event.start && !zeroDuration) {\n                            addDay(minResize);\n                        }\n                    } else {\n                        addDuration(minResize, $slotDuration);\n                        if (minResize > event.end) {\n                            minResize = event.end;\n                        }\n                        // Overwrite the date due to possible discrepancy between calculated date\n                        // and resizer coordinates in browser\n                        date = event.end;\n                        if (!zeroDuration) {\n                            date = subtractDuration(cloneDate(date), $slotDuration);\n                        }\n                    }\n\n                    // Handle zero duration events\n                    if (zeroDuration && !allDay) {\n                        extraDuration = $slotDuration;\n                    }\n                }\n\n                move(jsEvent);\n            }\n        }\n    }\n\n    export function select(jsEvent) {\n        if (!action) {\n            action = validJsEvent(jsEvent) ? (\n                $selectable && !listView($view) ? ACTION_SELECT : ACTION_CLICK\n            ) : ACTION_NO_ACTION;\n\n            if (complexAction()) {\n                common(jsEvent);\n\n                iClass = 'selecting';\n\n                selectStep = allDay ? createDuration({day: 1}) : $slotDuration;\n\n                // Create dummy source event\n                event = {\n                    allDay,\n                    start: date,\n                    end: addDuration(cloneDate(date), selectStep),\n                    resourceIds: resource ? [resource.id] : []\n                };\n\n                move(jsEvent);\n            }\n        }\n    }\n\n    export function noAction() {\n        if (!action) {\n            action = ACTION_NO_ACTION;\n        }\n    }\n\n\tfunction common(jsEvent) {\n        window.getSelection().removeAllRanges();\n\n        fromX = toX = jsEvent.clientX;\n        fromY = toY = jsEvent.clientY;\n\n        let dayEl = getElementWithPayload(toX, toY);\n        ({allDay, date, resource} = getPayload(dayEl)(toX, toY));\n\n        if (timelineView($view)) {\n            bodyEl = clipEl = $_bodyEl;\n        } else {\n            bodyEl = ancestor(dayEl, resource ? 4 : 3);\n            clipEl = ancestor(dayEl, resource && (dragging() || $datesAboveResources) ? 2 : 1);\n        }\n        calcViewport();\n\n        if (jsEvent.pointerType !== 'mouse') {\n            // For touch devices init long press delay\n            timer = setTimeout(() => {\n                if (action) {\n                    interacting = true;\n                    move(jsEvent);\n                }\n            }, (selecting() ? $selectLongPressDelay : $eventLongPressDelay) ?? $longPressDelay);\n        }\n    }\n\n    function move(jsEvent) {\n        if (\n            interacting ||\n            jsEvent && jsEvent.pointerType === 'mouse' && distance() >= (selecting() ? $selectMinDistance : $eventDragMinDistance)\n        ) {\n            interacting = true;\n            unselect(jsEvent);\n            $_iClass = iClass;\n\n            if (!$_iEvents[0]) {\n                if (selecting()) {\n                    createIEventSelect();\n                } else {\n                    createIEvent(jsEvent, resizing() ? $eventResizeStart : $eventDragStart);\n                }\n            }\n\n            let payload = findPayload(findDayEl());\n            if (payload) {\n                let newAllDay;\n                ({allDay: newAllDay, date: newDate, resource: newResource} = payload);\n\n                if (newAllDay === allDay) {\n                    let candidate = copyIEventData({}, $_iEvents[0]);\n                    let constraintFn = $resizeConstraint;\n                    delta = createDuration((newDate - date) / 1000);\n                    if (resizingStart()) {\n                        // Resizing start\n                        candidate.start = addDuration(cloneDate(event.start), delta);\n                        if (candidate.start > minResize) {\n                            candidate.start = minResize;\n                            delta = createDuration((minResize - event.start) / 1000);\n                        }\n                    } else {\n                        candidate.end = addDuration(cloneDate(event.end), delta);\n                        if (extraDuration) {\n                            addDuration(candidate.end, extraDuration);\n                        }\n                        if (resizing()) {\n                            // Resizing end\n                            if (candidate.end < minResize) {\n                                candidate.end = minResize;\n                                delta = createDuration((minResize - event.end) / 1000);\n                            }\n                        } else if (selecting()) {\n                            // Selecting\n                            if (candidate.end < event.end) {\n                                candidate.start = subtractDuration(candidate.end, selectStep);\n                                candidate.end = event.end;\n                            } else {\n                                candidate.start = event.start;\n                            }\n                            constraintFn = $selectConstraint;\n                        } else {\n                            // Dragging\n                            candidate.start = addDuration(cloneDate(event.start), delta);\n                            if (resource) {\n                                candidate.resourceIds = event.resourceIds.filter(id => id !== resource.id);\n                                candidate.resourceIds.push(newResource.id);\n                            }\n                            constraintFn = $dragConstraint;\n                        }\n                    }\n                    // Check constraint\n                    do {\n                        if (constraintFn !== undefined) {\n                            candidate = copyIEventData(cloneEvent(event), candidate);\n                            let result = constraintFn(\n                                selecting()\n                                    ? createSelectCallbackInfo(candidate, jsEvent)\n                                    : createCallbackInfo(candidate, event, jsEvent)\n                            );\n                            if (result === false) {\n                                // Revert preview event\n                                $_iEvents[0] = copyIEventData($_iEvents[0], event);\n                                break;\n                            }\n                        }\n                        // Update preview event\n                        $_iEvents[0] = copyIEventData($_iEvents[0], candidate);\n                    } while (0);\n                }\n            }\n        }\n\n        if ($dragScroll) {\n            let thresholdY = $slotHeight * 2;\n            let thresholdX = $slotWidth;\n            animate(() => {\n                if (bodyEl) {\n                    if (toY < thresholdY) {\n                        window.scrollBy(0, max(-10, (toY - thresholdY) / 3));\n                    }\n                    if (toY < bodyRect.top + thresholdY) {\n                        bodyEl.scrollTop += max(-10, (toY - bodyRect.top - thresholdY) / 3);\n                    }\n                    if (toY > window.innerHeight - thresholdY) {\n                        window.scrollBy(0, min(10, (toY - window.innerHeight + thresholdY) / 3));\n                    }\n                    if (toY > bodyRect.bottom - thresholdY) {\n                        bodyEl.scrollTop += min(10, (toY - bodyRect.bottom + thresholdY) / 3);\n                    }\n\n                    if (timelineView($view)) {\n                        if (toX < bodyRect.left + thresholdX) {\n                            bodyEl.scrollLeft += max(-10, (toX - bodyRect.left - thresholdX) / 3);\n                        }\n                        if (toX > bodyRect.right - thresholdX) {\n                            bodyEl.scrollLeft += min(10, (toX - bodyRect.right + thresholdX) / 3);\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    export function handleScroll() {\n        if (complexAction()) {\n            calcViewport();\n            move();\n        }\n    }\n\n    function handlePointerMove(jsEvent) {\n        if (complexAction() && jsEvent.isPrimary) {\n            toX = jsEvent.clientX;\n            toY = jsEvent.clientY;\n            move(jsEvent);\n        }\n    }\n\n    function handlePointerUp(jsEvent) {\n        if (selected && $unselectAuto && !($unselectCancel && jsEvent.target.closest($unselectCancel))) {\n            unselect(jsEvent);\n        }\n        if (action && jsEvent.isPrimary) {\n            if (interacting) {\n                if (selecting()) {\n                    selected = true;\n                    if (isFunction($selectFn)) {\n                        let info = createSelectCallbackInfo($_iEvents[0], jsEvent);\n                        $selectFn(info);\n                    }\n                } else {\n                    event.display = display;\n\n                    let callback = resizing() ? $eventResizeStop : $eventDragStop;\n                    if (isFunction(callback)) {\n                        callback({event: toEventWithLocalDates(event), jsEvent, view: toViewWithLocalDates($_view)});\n                    }\n\n                    let oldEvent = cloneEvent(event);\n                    updateEvent(event, $_iEvents[0]);\n\n                    destroyIEvent();\n\n                    callback = resizing() ? $eventResize : $eventDrop;\n                    if (isFunction(callback)) {\n                        let eventRef = event;\n                        let info = createCallbackInfo(event, oldEvent, jsEvent);\n                        callback(assign(info, {\n                            revert() {\n                                updateEvent(eventRef, oldEvent);\n                            }\n                        }));\n                    }\n                }\n            } else {\n                if (clicking() || selecting()) {\n                    // Perform date click\n                    if (isFunction($dateClick) && !noDateClick) {\n                        toX = jsEvent.clientX;\n                        toY = jsEvent.clientY;\n                        let dayEl = getElementWithPayload(toX, toY);\n                        if (dayEl) {\n                            let {allDay, date, resource} = getPayload(dayEl)(toX, toY);\n                            $dateClick({\n                                allDay,\n                                date: toLocalDate(date),\n                                dateStr: toISOString(date),\n                                dayEl,\n                                jsEvent,\n                                view: toViewWithLocalDates($_view),\n                                resource\n                            });\n                        }\n                    }\n                }\n            }\n\n            interacting = false;\n            action = fromX = fromY = toX = toY = event = display = date = newDate = resource = newResource = delta =\n                extraDuration = allDay = $_iClass = minResize = selectStep = margin = undefined;\n            bodyEl = clipEl = bodyRect = clipRect = undefined;\n\n            if (timer) {\n                clearTimeout(timer);\n                timer = undefined;\n            }\n        }\n\n        noDateClick = false;\n    }\n\n    function findDayEl() {\n        // Limit coordinates to viewport\n        return getElementWithPayload(\n            limit(toX, viewport[0], viewport[1]),\n            limit(toY, viewport[2], viewport[3])\n        );\n    }\n\n    function findPayload(dayEl) {\n        if (dayEl) {\n            let payload = getPayload(dayEl)(toX, toY);\n            if (payload.disabled) {\n                if (!$validRange.end || payload.date < $validRange.end) {\n                    return findPayload(dayEl.nextElementSibling);\n                }\n                if (!$validRange.start || payload.date > $validRange.start) {\n                    return findPayload(dayEl.previousElementSibling);\n                }\n            } else {\n                return payload;\n            }\n        }\n        return null;\n    }\n\n    function calcViewport() {\n        bodyRect = rect(bodyEl);\n        clipRect = rect(clipEl);\n        viewport = [\n            max(0, clipRect.left + (timelineView($view) ? 1 : ($_dayGrid ? 0 : 8))),  // left\n            min(document.documentElement.clientWidth, clipRect.left + clipEl.clientWidth) - 2,  // right\n            max(0, bodyRect.top),  // top\n            min(document.documentElement.clientHeight, bodyRect.top + bodyEl.clientHeight) - 2  // bottom\n        ];\n    }\n\n    function createIEvent(jsEvent, callback) {\n        if (isFunction(callback)) {\n            callback({event: toEventWithLocalDates(event), jsEvent, view: toViewWithLocalDates($_view)});\n        }\n        display = event.display;\n        event.display = 'preview';\n        $_iEvents[0] = cloneEvent(event);\n        if (margin !== undefined) {\n            $_iEvents[0]._margin = margin;\n        }\n        if (extraDuration) {\n            addDuration($_iEvents[0].end, extraDuration);\n        }\n        event.display = 'ghost';\n        $_events = $_events;\n    }\n\n    function createIEventSelect() {\n        $_iEvents[0] = {\n            id: '{select}',\n            allDay: event.allDay,\n            start: event.start,\n            title: '',\n            display: 'preview',\n            extendedProps: {},\n            backgroundColor: $selectBackgroundColor,\n            resourceIds: event.resourceIds,\n            classNames: [],\n            styles: []\n        };\n    }\n\n    function destroyIEvent() {\n        $_iEvents[0] = null;\n    }\n\n    function copyIEventData(target, source) {\n        target.start = source.start;\n        target.end = source.end;\n        target.resourceIds = source.resourceIds;\n        return target;\n    }\n\n    function updateEvent(target, source) {\n        copyIEventData(target, source);\n        $_events = $_events;\n    }\n\n    function createSelectCallbackInfo(event, jsEvent) {\n        let {start, end} = toEventWithLocalDates(event);\n        return {\n            start,\n            end,\n            startStr: toISOString(event.start),\n            endStr: toISOString(event.end),\n            allDay,\n            view: toViewWithLocalDates($_view),\n            resource,\n            jsEvent\n        };\n    }\n\n    function createCallbackInfo(event, oldEvent, jsEvent) {\n        let info;\n        if (resizing()) {\n            info = resizingStart()\n                ? {startDelta: delta, endDelta: createDuration(0)}\n                : {startDelta: createDuration(0), endDelta: delta};\n        } else {\n            info = {\n                delta,\n                oldResource: resource !== newResource ? resource : undefined,\n                newResource: resource !== newResource ? newResource : undefined\n            };\n        }\n        assign(info, {\n            event: toEventWithLocalDates(event),\n            oldEvent: toEventWithLocalDates(oldEvent),\n            view: toViewWithLocalDates($_view),\n            jsEvent\n        });\n\n        return info;\n    }\n\n    function distance() {\n        return Math.sqrt(Math.pow(toX - fromX, 2) + Math.pow(toY - fromY, 2));\n    }\n\n    function dragging() {\n        return action === ACTION_DRAG;\n    }\n\n    function resizing() {\n        return action === ACTION_RESIZE_END || resizingStart();\n    }\n\n    function resizingStart() {\n        return action === ACTION_RESIZE_START;\n    }\n\n    function clicking() {\n        return action === ACTION_CLICK;\n    }\n\n    function selecting() {\n        return action === ACTION_SELECT;\n    }\n\n    function complexAction() {\n        return action && action < ACTION_CLICK;\n    }\n\n    function validJsEvent(jsEvent) {\n        return jsEvent.isPrimary && (jsEvent.pointerType !== 'mouse' || jsEvent.buttons & 1);\n    }\n\n    export function unselect(jsEvent) {\n        if (selected) {\n            selected = false;\n            destroyIEvent();\n            if (isFunction($unselectFn)) {\n                $unselectFn({\n                    jsEvent,\n                    view: toViewWithLocalDates($_view)\n                });\n            }\n        }\n    }\n\n    export function noClick() {\n        noDateClick = true;\n    }\n\n    // Clear selection on view params change\n    _view.subscribe(unselect);\n\n    function handleTouchStart(jsEvent) {\n        if (complexAction()) {\n            let target = jsEvent.target;\n            let stops = [];\n            let stop = () => runAll(stops);\n            stops.push(listen(window, 'touchmove', noop, {passive: false}))\n            stops.push(listen(target, 'touchmove', createPreventDefaultHandler(() => interacting)));\n            stops.push(listen(target, 'touchend', stop));\n            stops.push(listen(target, 'touchcancel', stop));\n        }\n    }\n\n    function createPreventDefaultHandler(condition) {\n        return jsEvent => {\n            if (condition()) {\n                jsEvent.preventDefault();\n            }\n        };\n    }\n</script>\n\n<svelte:window\n    onpointermove={handlePointerMove}\n    onpointerup={handlePointerUp}\n    onpointercancel={handlePointerUp}\n    onscroll={handleScroll}\n    onselectstart={createPreventDefaultHandler(complexAction)}\n    oncontextmenu={createPreventDefaultHandler(() => timer)}\n    ontouchstart={handleTouchStart}\n/>\n", "<script>\n    import {getContext} from 'svelte';\n    import {addDuration, cloneDate, getElementWithPayload, getPayload} from '#lib';\n\n    let {_iEvents, slotDuration} = getContext('state');\n\n    let x = 0, y = 0;\n\n    $effect(() => {\n        if ($_iEvents[0]) {\n            removePointerEvent();\n        }\n    });\n\n    function move() {\n        let dayEl = getElementWithPayload(x, y);\n\n        if (dayEl) {\n            let {allDay, date, resource, disabled} = getPayload(dayEl)(x, y);\n            if (!disabled) {\n                let idx = allDay ? 2 : 1;\n\n                if (!$_iEvents[idx]) {\n                    createPointerEvent(idx);\n                }\n                $_iEvents[idx].start = date;\n                $_iEvents[idx].end = addDuration(cloneDate(date), $slotDuration);\n                $_iEvents[idx].resourceIds = resource ? [resource.id] : [];\n\n                return;\n            }\n        }\n\n        removePointerEvent();\n    }\n\n    export function handleScroll() {\n        move();\n    }\n\n    function handlePointerMove(jsEvent) {\n        if (validEvent(jsEvent)) {\n            x = jsEvent.clientX;\n            y = jsEvent.clientY;\n            move();\n        }\n    }\n\n    function createPointerEvent(idx) {\n        $_iEvents[idx] = {\n            id: '{pointer}',\n            title: '',\n            display: 'pointer',\n            extendedProps: {},\n            backgroundColor: 'transparent',\n            classNames: [],\n            styles: []\n        };\n    }\n\n    function removePointerEvent() {\n        if ($_iEvents[1]) {\n            $_iEvents[1] = null;\n        }\n        if ($_iEvents[2]) {\n            $_iEvents[2] = null;\n        }\n    }\n\n    function validEvent(jsEvent) {\n        return jsEvent.isPrimary && jsEvent.pointerType === 'mouse';\n    }\n</script>\n\n<svelte:window\n    onpointermove={handlePointerMove}\n    onscroll={handleScroll}\n/>\n", "<script>\n    import {getContext} from 'svelte';\n    import {bgEvent, helperEvent} from '#lib';\n    import {eventResizable} from './lib';\n\n    let {chunk, axis, forceDate = undefined, forceMargin = undefined, children} = $props();\n\n    let {theme, eventDurationEditable, eventResizableFromStart, editable, _interaction} = getContext('state');\n\n    let event = $derived(chunk.event);\n    let display = $derived(chunk.event.display);\n\n    let resizable = $derived(\n        !bgEvent(display) && !helperEvent(display) && eventResizable(event, $eventDurationEditable, $editable)\n    );\n\n    function createResizeHandler(start) {\n        return jsEvent => $_interaction.action.resize(\n            event,\n            jsEvent,\n            start,\n            axis,\n            forceDate?.(),\n            forceMargin?.(),\n            chunk.zeroDuration\n        );\n    }\n</script>\n\n{#if resizable && $eventResizableFromStart}\n    <div class=\"{$theme.resizer} {$theme.start}\" onpointerdown={createResizeHandler(true)}></div>\n{/if}\n{@render children()}\n{#if resizable}\n    <div class=\"{$theme.resizer}\" onpointerdown={createResizeHandler(false)}></div>\n{/if}\n", "<script>\n    import {getContext} from 'svelte';\n    import {bgEvent, helperEvent, listen} from '#lib';\n    import {eventDraggable} from './lib';\n    import Action from './Action.svelte';\n    import Pointer from './Pointer.svelte';\n    import Resizer from './Resizer.svelte';\n\n    let {theme, editable, eventStartEditable, pointer, _bodyEl,\n        _interaction, _iClasses} = getContext('state');\n\n    $_interaction.resizer = Resizer;\n\n    $effect(() => {\n        $theme;\n        $eventStartEditable;\n        $editable;\n        $_iClasses = (classNames, event) => {\n            let {display} = event;\n            return [\n                ...classNames,\n                helperEvent(display)\n                    ? [$theme[display]]\n                    : (\n                        !bgEvent(display) && eventDraggable(event, $eventStartEditable, $editable)\n                            ? [$theme.draggable]\n                            : []\n                    )\n            ];\n        };\n    });\n\n    $effect(() => {\n        if ($_bodyEl) {\n            return listen($_bodyEl, 'scroll', bodyScrollHandler);\n        }\n    });\n\n    function bodyScrollHandler() {\n        for (let component of Object.values($_interaction)) {\n            component?.handleScroll?.();\n        }\n    }\n</script>\n\n<Action bind:this={$_interaction.action}/>\n{#if $pointer}\n    <Pointer bind:this={$_interaction.pointer}/>\n{/if}\n", "import Auxiliary from './Auxiliary.svelte';\n\nexport default {\n    createOptions(options) {\n        options.dateClick = undefined;\n        options.dragConstraint = undefined;\n        options.dragScroll = true;\n        options.editable = false;\n        options.eventDragMinDistance = 5;\n        options.eventDragStart = undefined;\n        options.eventDragStop = undefined;\n        options.eventDrop = undefined;\n        options.eventDurationEditable = true;\n        options.eventLongPressDelay = undefined;\n        options.eventResizableFromStart = false;\n        options.eventResizeStart = undefined;\n        options.eventResizeStop = undefined;\n        options.eventResize = undefined;\n        options.eventStartEditable = true;\n        options.longPressDelay = 1000;\n        options.pointer = false;\n        options.resizeConstraint = undefined;\n        options.select = undefined;\n        options.selectBackgroundColor = undefined;  // ec option\n        options.selectConstraint = undefined;\n        options.selectLongPressDelay = undefined;\n        options.selectMinDistance = 5;\n        options.unselect = undefined;\n        options.unselectAuto = true;\n        options.unselectCancel = '';\n        options.theme.draggable = 'ec-draggable';\n        options.theme.ghost = 'ec-ghost';\n        options.theme.preview = 'ec-preview';\n        options.theme.pointer = 'ec-pointer';\n        options.theme.resizer = 'ec-resizer';\n        options.theme.start = 'ec-start';\n        options.theme.dragging = 'ec-dragging';\n        options.theme.resizingY = 'ec-resizing-y';\n        options.theme.resizingX = 'ec-resizing-x';\n        options.theme.selecting = 'ec-selecting';\n    },\n\n    createStores(state) {\n        state._auxiliary.update($_auxiliary => [...$_auxiliary, Auxiliary]);\n    }\n}\n", "<script>\n    import {getContext} from 'svelte';\n    import {BaseEvent} from '#components';\n\n    let {chunk} = $props();\n\n    let {theme, _interaction} = getContext('state');\n\n    // Style\n    let styles = $derived(style => {\n        delete style['background-color'];\n        delete style['color'];\n        return style;\n    });\n</script>\n\n<BaseEvent {chunk} {styles} onpointerdown={$_interaction.action?.noAction}>\n    {#snippet body(defaultBody, bgColor, txtColor)}\n        <div class=\"{$theme.eventTag}\" style:background-color={bgColor}></div>\n        {@render defaultBody()}\n    {/snippet}\n</BaseEvent>\n", "<script>\n    import {getContext} from 'svelte';\n    import {\n        addDay, bgEvent, cloneDate, createEventChunk, datesEqual, eventIntersects, outsideRange, setContent, setPayload,\n        sortEventChunks, toISOString\n    } from '#lib';\n    import Event from './Event.svelte';\n\n    let {date} = $props();\n\n    let {_filteredEvents, _interaction, _intlListDay, _intlListDaySide, _today,\n        resources, filterEventsWithResources, highlightedDates, theme, validRange} = getContext('state');\n\n    let el = $state();\n    let isToday = $derived(datesEqual(date, $_today));\n    let highlight = $derived($highlightedDates.some(d => datesEqual(d, date)));\n    let disabled = $derived(outsideRange(date, $validRange));\n    let datetime = $derived(toISOString(date, 10));\n\n    let chunks = $derived.by(() => {\n        let chunks = [];\n        if (!disabled) {\n            let start = date;\n            let end = addDay(cloneDate(date));\n            for (let event of $_filteredEvents) {\n                if (!bgEvent(event.display) && eventIntersects(event, start, end, $filterEventsWithResources ? $resources : undefined)) {\n                    let chunk = createEventChunk(event, start, end);\n                    chunks.push(chunk);\n                }\n            }\n            sortEventChunks(chunks);\n        }\n        return chunks;\n    });\n\n    // dateFromPoint\n    $effect(() => {\n        if (el) {\n            setPayload(el, () => ({allDay: true, date, resource: undefined, dayEl: el, disabled}));\n        }\n    });\n</script>\n\n{#if chunks.length}\n    <div\n        bind:this={el}\n        class=\"{$theme.day} {$theme.weekdays?.[date.getUTCDay()]}{isToday ? ' ' + $theme.today : ''}{highlight ? ' ' + $theme.highlight : ''}\"\n        role=\"listitem\"\n        onpointerdown={$_interaction.action?.select}\n    >\n        <!-- svelte-ignore a11y_missing_content -->\n        <h4 class=\"{$theme.dayHead}\">\n            <time {datetime} use:setContent={$_intlListDay.format(date)}></time>\n            <time class=\"{$theme.daySide}\" {datetime} use:setContent={$_intlListDaySide.format(date)}></time>\n        </h4>\n        {#each chunks as chunk (chunk.event)}\n            <Event {chunk}/>\n        {/each}\n    </div>\n{/if}\n", "<script>\n    import {getContext} from 'svelte';\n    import {addDay, cloneDate, toViewWithLocalDates, setContent, bgEvent, isFunction} from '#lib';\n    import Day from './Day.svelte';\n\n    let {_bodyEl, _filteredEvents, _view, _viewDates, noEventsClick, noEventsContent, theme} = getContext('state');\n\n    let noEvents = $derived.by(() => {\n        let noEvents = true;\n        if ($_viewDates.length) {\n            let start = $_viewDates[0];\n            let end = addDay(cloneDate($_viewDates.at(-1)));\n            for (let event of $_filteredEvents) {\n                if (!bgEvent(event.display) && event.start < end && event.end > start) {\n                    noEvents = false;\n                    break;\n                }\n            }\n        }\n        return noEvents;\n    });\n\n    let content = $derived(isFunction($noEventsContent) ? $noEventsContent() : $noEventsContent);\n\n    function onclick(jsEvent) {\n        if (isFunction($noEventsClick)) {\n            $noEventsClick({jsEvent, view: toViewWithLocalDates($_view)});\n        }\n    }\n</script>\n\n<div bind:this={$_bodyEl} class=\"{$theme.body}\">\n    <div class=\"{$theme.content}\">\n        {#if noEvents}\n            <!-- svelte-ignore a11y_click_events_have_key_events -->\n            <!-- svelte-ignore a11y_no_static_element_interactions -->\n            <div use:setContent={content} class=\"{$theme.noEvents}\" {onclick}></div>\n        {:else}\n            {#each $_viewDates as date}\n                <Day {date}/>\n            {/each}\n        {/if}\n    </div>\n</div>\n", "<script>\n    import Body from './Body.svelte';\n</script>\n\n<Body/>\n", "import {btnTextDay, btnTextWeek, btnTextMonth, btnTextYear, intl, themeView} from '#lib';\nimport View from './View.svelte';\n\nexport default {\n    createOptions(options) {\n        // Common options\n        options.buttonText.listDay = 'list';\n        options.buttonText.listWeek = 'list';\n        options.buttonText.listMonth = 'list';\n        options.buttonText.listYear = 'list';\n        options.listDayFormat = {weekday: 'long'};\n        options.listDaySideFormat = {year: 'numeric', month: 'long', day: 'numeric'};\n        options.noEventsClick = undefined;  // ec option\n        options.noEventsContent = 'No events';\n        options.theme.daySide = 'ec-day-side';\n        options.theme.eventTag = 'ec-event-tag';\n        options.theme.noEvents = 'ec-no-events';\n        options.view = 'listWeek';\n        options.views.listDay = {\n            buttonText: btnTextDay,\n            component: View,\n            duration: {days: 1},\n            theme: themeView('ec-list ec-day-view')\n        };\n        options.views.listWeek = {\n            buttonText: btnTextWeek,\n            component: View,\n            duration: {weeks: 1},\n            theme: themeView('ec-list ec-week-view')\n        };\n        options.views.listMonth = {\n            buttonText: btnTextMonth,\n            component: View,\n            duration: {months: 1},\n            theme: themeView('ec-list ec-month-view')\n        };\n        options.views.listYear = {\n            buttonText: btnTextYear,\n            component: View,\n            duration: {years: 1},\n            theme: themeView('ec-list ec-year-view')\n        };\n    },\n\n    createStores(state) {\n        state._intlListDay = intl(state.locale, state.listDayFormat);\n        state._intlListDaySide = intl(state.locale, state.listDaySideFormat);\n    }\n}\n", "import {derived} from 'svelte/store';\nimport {createDate, createSlotTimeLimits, createTimes, setMidnight} from '#lib';\n\nexport function times(state) {\n    return derived(\n        [state.slotDuration, state.slotLabelInterval, state._slotTimeLimits, state._intlSlotLabel],\n        args => createTimes(setMidnight(createDate()), ...args)\n    );\n}\n\nexport function slotTimeLimits(state) {\n    return derived(\n        [state.slotMinTime, state.slotMaxTime, state.flexibleSlotTimeLimits, state._viewDates, state._filteredEvents],\n        args => createSlotTimeLimits(...args)\n    );\n}\n", "import {isFunction, sortEventChunks} from '#lib';\n\nexport function groupEventChunks(chunks) {\n    if (!chunks.length) {\n        return;\n    }\n\n    sortEventChunks(chunks);\n\n    // Group\n    let group = {\n        columns: [],\n        end: chunks[0].end\n    };\n    for (let chunk of chunks) {\n        let c = 0;\n        if (chunk.start < group.end) {\n            for (; c < group.columns.length; ++c) {\n                if (group.columns[c].at(-1).end <= chunk.start) {\n                    break;\n                }\n            }\n            if (chunk.end > group.end) {\n                group.end = chunk.end;\n            }\n        } else {\n            group = {\n                columns: [],\n                end: chunk.end\n            };\n        }\n\n        if (group.columns.length < c + 1) {\n            group.columns.push([]);\n        }\n        group.columns[c].push(chunk);\n\n        chunk.group = group;\n        chunk.column = c;\n    }\n}\n\nexport function createAllDayContent(allDayContent) {\n    let text = 'all-day';\n    let content;\n    if (allDayContent) {\n        content = isFunction(allDayContent) ? allDayContent({text}) : allDayContent;\n        if (typeof content === 'string') {\n            content = {html: content};\n        }\n    } else {\n        content = {\n            html: text\n        };\n    }\n\n    return content;\n}\n", "<script>\n    import {getContext} from 'svelte';\n    import {setContent} from '#lib';\n    import {createAllDayContent} from './utils.js';\n\n    let {children, lines} = $props();\n\n    let {allDayContent, slotLabelInterval, theme, _times} = getContext('state');\n\n    let allDayText = $derived(createAllDayContent($allDayContent));\n    let showAllTimes = $derived($slotLabelInterval && $slotLabelInterval.seconds <= 0);\n</script>\n\n<div class=\"{$theme.sidebar}\">\n    <div class=\"{$theme.sidebarTitle}\" use:setContent={allDayText}></div>\n    {#each $_times as time, i}\n        <time\n            class=\"{$theme.time}{(i || showAllTimes) && time[2] ? '' : ' ' + $theme.minor}\"\n            datetime=\"{time[0]}\"\n            use:setContent={time[1]}\n        ></time>\n    {/each}\n</div>\n<div class=\"{$theme.days}\" role=\"row\">\n    <div class=\"{$theme.lines}\">{#if lines}{@render lines()}{/if}</div>\n    {#if children}\n        {@render children()}\n    {/if}\n</div>\n", "<script>\n    import {getContext, untrack} from 'svelte';\n    import {observeResize} from '#lib';\n    import Section from './Section.svelte';\n\n    let {children} = $props();\n\n    let {\n        _bodyEl, _viewDates, _slotTimeLimits, _times, _recheckScrollable, scrollTime, slotDuration, slotHeight, theme\n    } = getContext('state');\n\n    let el = $state();\n\n    $effect(() => {\n        $_bodyEl = el;\n    });\n\n    $effect(() => {\n        $_viewDates;\n        $scrollTime;\n        untrack(scrollToTime);\n    });\n\n    function scrollToTime() {\n        el.scrollTop = (($scrollTime.seconds - $_slotTimeLimits.min.seconds) / $slotDuration.seconds - 0.5) * $slotHeight;\n    }\n</script>\n\n<div\n    bind:this={el}\n    class=\"{$theme.body}\"\n    use:observeResize={() => $_recheckScrollable = true}\n>\n    <div class=\"{$theme.content}\">\n        <Section {children}>\n            {#snippet lines()}\n                {#each $_times as time}\n                    <div class=\"{$theme.line}{time[2] ? '' : ' ' + $theme.minor}\"></div>\n                {/each}\n            {/snippet}\n        </Section>\n    </div>\n</div>\n", "<script>\n    import {getContext} from 'svelte';\n    import {bgEvent, ghostEvent, helperEvent} from '#lib';\n    import {InteractableEvent} from '#components';\n\n    let {date, chunk} = $props();\n\n    let {slotEventOverlap, slotDuration, slotHeight, _slotTimeLimits} = getContext('state');\n\n    let display = $derived(chunk.event.display);\n\n    // Style\n    let styles = $derived(style => {\n        let step = $slotDuration.seconds;\n        let offset = $_slotTimeLimits.min.seconds;\n        let start = (chunk.start - date) / 1000;\n        let end = (chunk.end - date) / 1000;\n        let top = (start - offset) / step * $slotHeight;\n        let height = (end - start) / step * $slotHeight || $slotHeight;\n        let maxHeight = ($_slotTimeLimits.max.seconds - start) / step * $slotHeight;\n        style['top'] = `${top}px`;\n        style['min-height'] = `${height}px`;\n        style['height'] = `${height}px`;\n        style['max-height'] = `${maxHeight}px`;\n        if (!bgEvent(display) && !helperEvent(display) || ghostEvent(display)) {\n            style['z-index'] = `${chunk.column + 1}`;\n            style['left'] = `${100 / chunk.group.columns.length * chunk.column}%`;\n            style['width'] = `${100 / chunk.group.columns.length * ($slotEventOverlap ? 0.5 * (1 + chunk.group.columns.length - chunk.column) : 1)}%`;\n        }\n        return style;\n    });\n</script>\n\n<InteractableEvent {chunk} {styles} axis=\"y\" />\n", "<script>\n    import {getContext} from 'svelte';\n\n    let {slotDuration, slotHeight, theme, _now, _today, _slotTimeLimits} = getContext('state');\n\n    let start = $derived(($_now - $_today) / 1000);\n    // Style\n    let top = $derived.by(() => {\n        let step = $slotDuration.seconds;\n        let offset = $_slotTimeLimits.min.seconds;\n        return (start - offset) / step * $slotHeight;\n    });\n</script>\n\n<div\n    class=\"{$theme.nowIndicator}\"\n    style=\"top:{top}px\"\n></div>\n", "<script>\n    import {getContext, onMount} from 'svelte';\n    import {\n        addDuration, bgEvent, cloneDate, createEventChunk, datesEqual, eventIntersects, floor, outsideRange, rect,\n        setPayload\n    } from '#lib';\n    import {groupEventChunks} from './utils.js';\n    import Event from './Event.svelte';\n    import NowIndicator from './NowIndicator.svelte';\n\n    let {date, resource = undefined} = $props();\n\n    let {_filteredEvents, _iEvents, highlightedDates, nowIndicator, slotDuration, slotHeight, filterEventsWithResources,\n        theme, resources, validRange, _interaction, _today, _slotTimeLimits} = getContext('state');\n\n    let el = $state();\n\n    let isToday = $derived(datesEqual(date, $_today));\n    let highlight = $derived($highlightedDates.some(d => datesEqual(d, date)));\n    let disabled = $derived(outsideRange(date, $validRange));\n\n    let start = $derived(addDuration(cloneDate(date), $_slotTimeLimits.min));\n    let end = $derived(addDuration(cloneDate(date), $_slotTimeLimits.max));\n\n    let resourceFilter = $derived(resource ?? ($filterEventsWithResources ? $resources : undefined));\n\n    let [chunks, bgChunks] = $derived.by(() => {\n        if (disabled) {\n            return [[], []];\n        }\n        let chunks = [];\n        let bgChunks = [];\n        for (let event of $_filteredEvents) {\n            if ((!event.allDay || bgEvent(event.display)) && eventIntersects(event, start, end, resourceFilter)) {\n                let chunk = createEventChunk(event, start, end);\n                switch (event.display) {\n                    case 'background': bgChunks.push(chunk); break;\n                    default: chunks.push(chunk);\n                }\n            }\n        }\n        groupEventChunks(chunks);\n        return [chunks, bgChunks];\n    });\n\n    let iChunks = $derived.by(() => {\n        if (disabled) {\n            return [];\n        }\n        return $_iEvents.map(\n            event => event && eventIntersects(event, start, end, resource) ? createEventChunk(event, start, end) : null\n        );\n    });\n\n    function dateFromPoint(x, y) {\n        y -= rect(el).top;\n        return {\n            allDay: false,\n            date: addDuration(\n                addDuration(cloneDate(date), $_slotTimeLimits.min),\n                $slotDuration,\n                floor(y / $slotHeight)\n            ),\n            resource,\n            dayEl: el,\n            disabled\n        };\n    }\n\n    onMount(() => {\n        setPayload(el, dateFromPoint);\n    });\n</script>\n\n<div\n    bind:this={el}\n    class=\"{$theme.day} {$theme.weekdays?.[date.getUTCDay()]}{isToday ? ' ' + $theme.today : ''}{highlight ? ' ' + $theme.highlight : ''}{disabled ? ' ' + $theme.disabled : ''}\"\n    role=\"cell\"\n    onpointerdown={!disabled ? $_interaction.action?.select : undefined}\n>\n    <div class=\"{$theme.bgEvents}\">\n        {#if !disabled}\n            {#each bgChunks as chunk (chunk.event)}\n                <Event {date} {chunk}/>\n            {/each}\n        {/if}\n    </div>\n    <div class=\"{$theme.events}\">\n        {#if !disabled}\n            <!-- Pointer -->\n            {#if iChunks[1]}\n                <Event {date} chunk={iChunks[1]}/>\n            {/if}\n            {#each chunks as chunk (chunk.event)}\n                <Event {date} {chunk}/>\n            {/each}\n            <!-- Drag, Resize & Select -->\n            {#if iChunks[0] && !iChunks[0].event.allDay}\n                <Event {date} chunk={iChunks[0]}/>\n            {/if}\n        {/if}\n    </div>\n    <div class=\"{$theme.extra}\">\n        <!-- Now indicator -->\n        {#if $nowIndicator && isToday && !disabled}\n            <NowIndicator />\n        {/if}\n    </div>\n</div>\n", "<script>\n    import {ancestor, bgEvent, height, rect, repositionEvent} from '#lib';\n    import {InteractableEvent} from '#components';\n\n    let {chunk, longChunks = {}} = $props();\n\n    let el = $state();\n    let margin = $state(1);\n    let event = $derived(chunk.event);\n    let display = $derived(chunk.event.display);\n\n    // Style\n    let styles = $derived(style => {\n        if (bgEvent(display)) {\n            style['width'] = `calc(${chunk.days * 100}% + ${(chunk.days - 1)}px)`;\n        } else {\n            style['width'] = `calc(${chunk.days * 100}% + ${(chunk.days - 1) * 7}px)`;\n            style['margin-top'] = `${event._margin ?? margin}px`;\n        }\n        return style;\n    });\n\n    export function reposition() {\n        if (!el) {\n            return;\n        }\n        margin = repositionEvent(chunk, longChunks, height(el));\n    }\n</script>\n\n<InteractableEvent\n    bind:el\n    {chunk}\n    {styles}\n    axis=\"x\"\n    forceMargin={() => rect(el).top - rect(ancestor(el, 1)).top}\n/>\n", "<script>\n    import {getContext, onMount} from 'svelte';\n    import {datesEqual, outsideRange, runReposition, setPayload} from '../../../lib';\n    import Event from './Event.svelte';\n\n    let {date, chunks, bgChunks, longChunks, iChunks = [], resource = undefined} = $props();\n\n    let {highlightedDates, theme, validRange, _interaction, _today} = getContext('state');\n\n    let el = $state();\n    let refs = [];\n\n    let dayChunks = $derived(chunks.filter(chunk => datesEqual(chunk.date, date)));\n    let dayBgChunks = $derived(bgChunks.filter(bgChunk => datesEqual(bgChunk.date, date)));\n\n    let isToday = $derived(datesEqual(date, $_today));\n    let highlight = $derived($highlightedDates.some(d => datesEqual(d, date)));\n    let disabled = $derived(outsideRange(date, $validRange));\n\n    // dateFromPoint\n    onMount(() => {\n        setPayload(el, () => ({\n            allDay: true,\n            date,\n            resource,\n            dayEl: el,\n            disabled\n        }));\n    });\n\n    export function reposition() {\n        if (!disabled) {\n            runReposition(refs, dayChunks);\n        }\n    }\n</script>\n\n<div\n    bind:this={el}\n    class=\"{$theme.day} {$theme.weekdays?.[date.getUTCDay()]}{isToday ? ' ' + $theme.today : ''}{highlight ? ' ' + $theme.highlight : ''}{disabled ? ' ' + $theme.disabled : ''}\"\n    role=\"cell\"\n    onpointerdown={!disabled ? $_interaction.action?.select : undefined}\n>\n    <div class=\"{$theme.bgEvents}\">\n        {#if !disabled}\n            {#each dayBgChunks as chunk (chunk.event)}\n                <Event {chunk}/>\n            {/each}\n        {/if}\n    </div>\n    <!-- Drag, Resize & Select -->\n    {#if iChunks[0] && datesEqual(iChunks[0].date, date) && !disabled}\n        <div class=\"{$theme.events} {$theme.preview}\">\n            <Event chunk={iChunks[0]}/>\n        </div>\n    {/if}\n    <div class=\"{$theme.events}\">\n        {#if !disabled}\n            {#each dayChunks as chunk, i (chunk.event)}\n                <!-- svelte-ignore binding_property_non_reactive -->\n                <Event {chunk} {longChunks} bind:this={refs[i]}/>\n            {/each}\n        {/if}\n    </div>\n</div>\n", "<script>\n    import {getContext, untrack} from 'svelte';\n    import {\n        addDay, bgEvent, cloneDate, createEventChunk, eventIntersects, limitToRange, prepareEventChunks, runReposition\n    } from '../../../lib';\n    import Day from './Day.svelte';\n\n    let {dates, resource = undefined} = $props();\n\n    let {_filteredEvents, _iEvents, hiddenDays, resources, filterEventsWithResources, validRange } = getContext('state');\n\n    let refs = [];\n\n    let start = $derived(limitToRange(dates[0], $validRange));\n    let end = $derived(addDay(cloneDate(limitToRange(dates.at(-1), $validRange))));\n\n    let resourceFilter = $derived(resource ?? (\n        $filterEventsWithResources ? $resources : undefined\n    ));\n\n    let [chunks, bgChunks, longChunks] = $derived.by(() => {\n        let chunks = [];\n        let bgChunks = [];\n        for (let event of $_filteredEvents) {\n            if (event.allDay && eventIntersects(event, start, end, resourceFilter)) {\n                let chunk = createEventChunk(event, start, end);\n                if (bgEvent(event.display)) {\n                    bgChunks.push(chunk);\n                } else {\n                    chunks.push(chunk);\n                }\n            }\n        }\n        prepareEventChunks(bgChunks, $hiddenDays);\n        let longChunks = prepareEventChunks(chunks, $hiddenDays);\n        return [chunks, bgChunks, longChunks];\n    });\n\n    function reposition() {\n        runReposition(refs, dates);\n    }\n    $effect(() => {\n        chunks;\n        untrack(reposition);\n    });\n\n    let iChunks = $derived($_iEvents.map(event => {\n        let chunk;\n        if (event && event.allDay && eventIntersects(event, start, end, resource)) {\n            chunk = createEventChunk(event, start, end);\n            prepareEventChunks([chunk], $hiddenDays);\n        } else {\n            chunk = null;\n        }\n        return chunk;\n    }));\n</script>\n\n{#each dates as date, i}\n    <!-- svelte-ignore binding_property_non_reactive -->\n    <Day {date} {chunks} {bgChunks} {longChunks} {iChunks} {resource} bind:this={refs[i]} />\n{/each}\n\n<svelte:window on:resize={reposition}/>\n", "<script>\n    import {getContext} from 'svelte';\n    import {datesEqual, setContent, toISOString} from '#lib';\n    import Section from './Section.svelte';\n    import Body from './Body.svelte';\n    import Day from './Day.svelte';\n    import Week from './all-day/Week.svelte';\n\n    let {_viewDates, _intlDayHeader, _intlDayHeaderAL, _today, allDaySlot, theme} = getContext('state');\n</script>\n\n<div class=\"{$theme.header}\">\n    <Section>\n        {#each $_viewDates as date}\n            <div\n                class=\"{$theme.day} {$theme.weekdays?.[date.getUTCDay()]}{datesEqual(date, $_today) ? ' ' + $theme.today : ''}\"\n                role=\"columnheader\"\n            >\n                <time\n                    datetime=\"{toISOString(date, 10)}\"\n                    aria-label=\"{$_intlDayHeaderAL.format(date)}\"\n                    use:setContent={$_intlDayHeader.format(date)}\n                ></time>\n            </div>\n        {/each}\n    </Section>\n    <div class=\"{$theme.hiddenScroll}\"></div>\n</div>\n{#if $allDaySlot}\n    <div class=\"{$theme.allDay}\">\n        <div class=\"{$theme.content}\">\n            <Section>\n                <Week dates={$_viewDates}/>\n            </Section>\n            <div class=\"{$theme.hiddenScroll}\"></div>\n        </div>\n    </div>\n{/if}\n<Body>\n{#each $_viewDates as date}\n    <Day {date}/>\n{/each}\n</Body>\n", "import {btnTextDay, btnTextWeek, themeView} from '#lib';\nimport {slotTimeLimits, times} from './stores.js';\nimport View from './View.svelte';\n\nexport {default as Section} from './Section.svelte';\nexport {default as Body} from './Body.svelte';\nexport {default as Day} from './Day.svelte';\nexport {default as Week} from './all-day/Week.svelte';\n\nexport default {\n    createOptions(options) {\n        // Common options\n        options.buttonText.timeGridDay = 'day';\n        options.buttonText.timeGridWeek = 'week';\n        options.view = 'timeGridWeek';\n        options.views.timeGridDay = {\n            buttonText: btnTextDay,\n            component: View,\n            dayHeaderFormat: {weekday: 'long'},\n            duration: {days: 1},\n            theme: themeView('ec-time-grid ec-day-view'),\n            titleFormat: {year: 'numeric', month: 'long', day: 'numeric'}\n        };\n        options.views.timeGridWeek = {\n            buttonText: btnTextWeek,\n            component: View,\n            duration: {weeks: 1},\n            theme: themeView('ec-time-grid ec-week-view')\n        };\n    },\n\n    createStores(state) {\n        state._slotTimeLimits = slotTimeLimits(state);  // flexible limits\n        state._times = times(state);\n    }\n}\n", "<script>\n    import {getContext, onMount, untrack} from 'svelte';\n    import {setContent, toLocalDate, isFunction} from '#lib';\n\n    let {resource, date = undefined, setLabel = undefined} = $props();\n\n    let {resourceLabelContent, resourceLabelDidMount, _intlDayHeaderAL} = getContext('state');\n\n    let el = $state();\n    // Content\n    let content = $derived.by(() => {\n        if ($resourceLabelContent) {\n            return isFunction($resourceLabelContent)\n                ? $resourceLabelContent({\n                    resource,\n                    date: date ? toLocalDate(date) : undefined,\n                })\n                : $resourceLabelContent;\n        } else {\n            return resource.title;\n        }\n    });\n    // Aria-label\n    let ariaLabel = $state();\n    $effect(() => {\n        content;\n        untrack(() => {\n            if (date) {\n                ariaLabel = $_intlDayHeaderAL.format(date) + ', ' + el.innerText;\n            } else if (setLabel) {\n                ariaLabel = undefined;\n                setLabel(el.innerText);\n            }\n        });\n    });\n\n    onMount(() => {\n        if (isFunction($resourceLabelDidMount)) {\n            $resourceLabelDidMount({\n                resource,\n                date: date ? toLocalDate(date) : undefined,\n                el\n            });\n        }\n    });\n</script>\n\n<span\n    bind:this={el}\n    aria-label=\"{ariaLabel}\"\n    use:setContent={content}\n></span>\n", "<script>\n    import {getContext} from 'svelte';\n    import {datesEqual, setContent, toISOString} from '#lib';\n    import {Section, Body, Day, Week} from '../time-grid/index.js';\n    import Label from './Label.svelte';\n\n    let {\n        datesAboveResources, _today, _viewDates, _viewResources, _intlDayHeader, _intlDayHeaderAL, allDaySlot, theme\n    } = getContext('state');\n\n    let loops = $derived($datesAboveResources ? [$_viewDates, $_viewResources] : [$_viewResources, $_viewDates]);\n\n    let resourceLabels = $state([]);\n</script>\n\n<div class=\"{$theme.header}\">\n    <Section>\n        {#each loops[0] as item0, i}\n            <div class=\"{$theme.resource}\">\n                {#if $datesAboveResources}\n                    <div class=\"{$theme.day} {$theme.weekdays?.[item0.getUTCDay()]}{datesEqual(item0, $_today) ? ' ' + $theme.today : ''}\">\n                        <time\n                            datetime=\"{toISOString(item0, 10)}\"\n                            aria-label=\"{$_intlDayHeaderAL.format(item0)}\"\n                            use:setContent={$_intlDayHeader.format(item0)}\n                        ></time>\n                    </div>\n                {:else}\n                    <div class=\"{$theme.day}\">\n                        <Label resource={item0} setLabel={e => resourceLabels[i] = e.detail + ', '} />\n                    </div>\n                {/if}\n                {#if loops[1].length > 1}\n                    <div class=\"{$theme.days}\">\n                        {#each loops[1] as item1}\n                            {#if $datesAboveResources}\n                                <div class=\"{$theme.day}\" role=\"columnheader\">\n                                    <Label resource={item1} date={item0} />\n                                </div>\n                            {:else}\n                                <div\n                                    class=\"{$theme.day} {$theme.weekdays?.[item1.getUTCDay()]}{datesEqual(item1, $_today) ? ' ' + $theme.today : ''}\"\n                                    role=\"columnheader\"\n                                >\n                                    <time\n                                        datetime=\"{toISOString(item1, 10)}\"\n                                        aria-label=\"{resourceLabels[i]}{$_intlDayHeaderAL.format(item1)}\"\n                                        use:setContent={$_intlDayHeader.format(item1)}\n                                    ></time>\n                                </div>\n                            {/if}\n                        {/each}\n                    </div>\n                {/if}\n            </div>\n        {/each}\n    </Section>\n    <div class=\"{$theme.hiddenScroll}\"></div>\n</div>\n{#if $allDaySlot}\n    <div class=\"{$theme.allDay}\">\n        <div class=\"{$theme.content}\">\n            <Section>\n                {#if $datesAboveResources}\n                    {#each $_viewDates as date}\n                        <div class=\"{$theme.resource}\">\n                            {#each $_viewResources as resource}\n                                <Week dates={[date]} {resource}/>\n                            {/each}\n                        </div>\n                    {/each}\n                {:else}\n                    {#each $_viewResources as resource}\n                        <div class=\"{$theme.resource}\">\n                            <Week dates={$_viewDates} {resource}/>\n                        </div>\n                    {/each}\n                {/if}\n            </Section>\n            <div class=\"{$theme.hiddenScroll}\"></div>\n        </div>\n    </div>\n{/if}\n<Body>\n{#each loops[0] as item0}\n    <div class=\"{$theme.resource}\">\n        {#each loops[1] as item1}\n            <Day\n                date={$datesAboveResources ? item0 : item1}\n                resource={$datesAboveResources ? item1 : item0}\n            />\n        {/each}\n    </div>\n{/each}\n</Body>\n", "import {btnTextDay, btnTextWeek, themeView, viewResources} from '#lib';\nimport TimeGrid from '../time-grid/index.js';\nimport View from './View.svelte';\n\nexport default {\n    createOptions(options) {\n        options.datesAboveResources = false;\n        // Common options\n        options.buttonText.resourceTimeGridDay = 'resources';\n        options.buttonText.resourceTimeGridWeek = 'resources';\n        options.view = 'resourceTimeGridWeek';\n        options.views.resourceTimeGridDay = {\n            buttonText: btnTextDay,\n            component: View,\n            duration: {days: 1},\n            theme: themeView('ec-time-grid ec-resource-day-view')\n        };\n        options.views.resourceTimeGridWeek = {\n            buttonText: btnTextWeek,\n            component: View,\n            duration: {weeks: 1},\n            theme: themeView('ec-time-grid ec-resource-week-view')\n        };\n    },\n\n    createStores(state) {\n        if (!('_times' in state)) {\n            TimeGrid.createStores(state);\n        }\n        if (!('_viewResources' in state)) {\n            state._viewResources = viewResources(state);\n        }\n    }\n}\n", "import {derived} from 'svelte/store';\nimport {createSlotTimeLimits, createTimes, getPayload} from '#lib';\n\n// slotTimeLimits per day\nexport function dayTimeLimits(state) {\n    return derived(\n        [state.slotMinTime, state.slotMaxTime, state.flexibleSlotTimeLimits, state._viewDates, state._filteredEvents],\n        ([$slotMinTime, $slotMaxTime, $flexibleSlotTimeLimits, $_viewDates, $_filteredEvents]) => {\n            let dayTimeLimits = {};\n            for (let date of $_viewDates) {\n                dayTimeLimits[date.getTime()] = createSlotTimeLimits(\n                    $slotMinTime,\n                    $slotMaxTime,\n                    $flexibleSlotTimeLimits,\n                    [date],\n                    $_filteredEvents\n                );\n            }\n\n            return dayTimeLimits;\n        }\n    );\n}\n\nexport function dayTimes(state) {\n    return derived(\n        [state._viewDates, state.slotDuration, state.slotLabelInterval, state._dayTimeLimits, state._intlSlotLabel],\n        ([$_viewDates, $slotDuration, $slotLabelInterval, $_dayTimeLimits, $_intlSlotLabel]) => {\n            let dayTimes = {};\n            for (let date of $_viewDates) {\n                let time = date.getTime();\n                dayTimes[time] = time in $_dayTimeLimits\n                    ? createTimes(date, $slotDuration, $slotLabelInterval, $_dayTimeLimits[time], $_intlSlotLabel)\n                    : [];\n            }\n\n            return dayTimes;\n        }\n    );\n}\n\nexport function nestedResources(state) {\n    return derived(state.resources, $resources => $resources.some(resource => getPayload(resource).children.length));\n}\n", "<script>\n    import {getContext, onMount} from 'svelte';\n    import {setContent, toLocalDate, isFunction} from '#lib';\n\n    let {resource, date = undefined} = $props();\n\n    let {resourceLabelContent, resourceLabelDidMount} = getContext('state');\n\n    let el = $state();\n    // Content\n    let content = $derived.by(() => {\n        if ($resourceLabelContent) {\n            return isFunction($resourceLabelContent)\n                ? $resourceLabelContent({\n                    resource,\n                    date: date ? toLocalDate(date) : undefined,\n                })\n                : $resourceLabelContent;\n        } else {\n            return resource.title;\n        }\n    });\n\n    onMount(() => {\n        if (isFunction($resourceLabelDidMount)) {\n            $resourceLabelDidMount({\n                resource,\n                date: date ? toLocalDate(date) : undefined,\n                el\n            });\n        }\n    });\n</script>\n\n<span\n    bind:this={el}\n    use:setContent={content}\n></span>\n", "<script>\n    import {getContext} from 'svelte';\n    import {getPayload, identity} from '#lib';\n\n    let {resource} = $props();\n\n    let {resources, theme} = getContext('state');\n\n    let payload = $state.raw({});\n    let expanded = $state(true);\n\n    $effect.pre(() => {\n        payload = getPayload(resource);\n        expanded = payload.expanded;\n    });\n\n    function onclick() {\n        expanded = !expanded;\n        payload.expanded = expanded;\n        toggle(payload.children, expanded);\n        resources.update(identity);\n    }\n\n    function toggle(children, expand) {\n        for (let child of children) {\n            let payload = getPayload(child);\n            payload.hidden = !expand;\n            if (payload.expanded) {\n                toggle(payload.children, expand);\n            }\n        }\n    }\n</script>\n\n{#each Array(payload.level) as level}\n    <span class=\"{$theme.expander}\"></span>\n{/each}\n\n<span class=\"{$theme.expander}\">\n    {#if payload.children?.length}\n        <button class=\"{$theme.button}\" {onclick}>\n            {#if expanded}&minus;{:else}&plus;{/if}\n        </button>\n    {/if}\n</span>\n", "<script>\n    import {getContext} from 'svelte';\n    import {max} from '#lib';\n    import Label from './Label.svelte';\n    import Expander from './Expander.svelte';\n\n    let {_viewResources, _headerHeight, _bodyEl, _resHs, _sidebarEl, _nestedResources, theme} = getContext('state');\n\n    function onwheel(jsEvent) {\n        $_bodyEl.scrollBy({\n            top: jsEvent.deltaY < 0 ? -30 : 30\n        });\n    }\n</script>\n\n<div class=\"{$theme.sidebar}\">\n    <div class=\"{$theme.sidebarTitle}\" style=\"flex-basis: {$_headerHeight}px\"></div>\n    <div class=\"{$theme.content}\" bind:this={$_sidebarEl} {onwheel}>\n        {#each $_viewResources as resource}\n            <div class=\"{$theme.resource}\" style=\"flex-basis: {max($_resHs.get(resource) ?? 0, 34)}px\" role=\"rowheader\">\n                {#if $_nestedResources}\n                    <Expander {resource} />\n                {/if}\n                <Label {resource}/>\n            </div>\n        {/each}\n    </div>\n</div>\n", "<script>\n    import {getContext} from 'svelte';\n    import {datesEqual, setContent, toISOString, toSeconds, observeResize} from '#lib';\n\n    let {_headerEl, _headerHeight, _intlDayHeader, _intlDayHeaderAL, _dayTimes, _today, _viewDates,\n        slotDuration, theme} = getContext('state');\n</script>\n\n<div class=\"{$theme.header}\" bind:this={$_headerEl} use:observeResize={() => $_headerHeight = $_headerEl.clientHeight}>\n    <div class=\"{$theme.days}\" role=\"row\">\n        {#each $_viewDates as date}\n            <div class=\"{$theme.day} {$theme.weekdays?.[date.getUTCDay()]}{datesEqual(date, $_today) ? ' ' + $theme.today : ''}\">\n                {#if toSeconds($slotDuration)}\n                    <div class=\"{$theme.dayHead}\">\n                        <time\n                            datetime=\"{toISOString(date, 10)}\"\n                            aria-label=\"{$_intlDayHeaderAL.format(date)}\"\n                            use:setContent={$_intlDayHeader.format(date)}\n                        ></time>\n                    </div>\n                    <div class=\"{$theme.times}\">\n                        {#each $_dayTimes[date.getTime()] as time}\n                            <div class=\"{$theme.time}{time[2] ? '' : ' ' + $theme.minor}\" role=\"columnheader\">\n                                <time\n                                    datetime=\"{time[0]}\"\n                                    use:setContent={time[1]}\n                                ></time>\n                            </div>\n                        {/each}\n                    </div>\n                {:else}\n                    <div class=\"{$theme.time}\" role=\"columnheader\">\n                        <time\n                            datetime=\"{toISOString(date, 10)}\"\n                            aria-label=\"{$_intlDayHeaderAL.format(date)}\"\n                            use:setContent={$_intlDayHeader.format(date)}\n                        ></time>\n                    </div>\n                {/if}\n            </div>\n        {/each}\n    </div>\n    <div class=\"{$theme.hiddenScroll}\"></div>\n</div>\n", "import {addDay, addDuration, cloneDate, createDuration, datesEqual, sortEventChunks, toSeconds} from '#lib';\n\nexport function prepareEventChunks(chunks, $_viewDates, $_dayTimeLimits, $slotDuration) {\n    let longChunks = {};\n    let filteredChunks = [];\n\n    if (chunks.length) {\n        sortEventChunks(chunks);\n\n        let step = toSeconds($slotDuration);\n        let prevChunk;\n        for (let chunk of chunks) {\n            let prevDayEnd;\n            if (step) {\n                let slots = 0;\n                for (let i = 0; i < $_viewDates.length; ++i) {\n                    let slotTimeLimits = getSlotTimeLimits($_dayTimeLimits, $_viewDates[i]);\n                    let dayStart = addDuration(cloneDate($_viewDates[i]), slotTimeLimits.min);\n                    let dayEnd = addDuration(cloneDate($_viewDates[i]), slotTimeLimits.max);\n                    if (!chunk.date) {\n                        if (chunk.start < dayEnd && chunk.end > dayStart) {\n                            // The first day is found\n                            chunk.date = $_viewDates[i];\n                            if (chunk.start < dayStart) {\n                                // Adjust chunk start\n                                chunk.start = dayStart;\n                            }\n                            // Calculate offset\n                            chunk.offset = (chunk.start - dayStart) / 1000 / step;\n                            // Calculate slots\n                            if (chunk.end > dayEnd) {\n                                slots += dayEnd - chunk.start;\n                            } else {\n                                slots += chunk.end - chunk.start || step * 1000;\n                                break;\n                            }\n                        }\n                    } else {\n                        if (chunk.end <= dayStart) {\n                            // Adjust chunk end\n                            chunk.end = prevDayEnd;\n                            break;\n                        }\n                        // The chunk is long one\n                        let key = $_viewDates[i].getTime();\n                        if (longChunks[key]) {\n                            longChunks[key].push(chunk);\n                        } else {\n                            longChunks[key] = [chunk];\n                        }\n                        // Calculate slots\n                        if (chunk.end > dayEnd) {\n                            slots += dayEnd - dayStart;\n                        } else {\n                            slots += chunk.end - dayStart;\n                            break;\n                        }\n                    }\n                    prevDayEnd = dayEnd;\n                }\n                chunk.slots = slots / 1000 / step;\n            } else {\n                // Month view\n                let days = 0;\n                for (let i = 0; i < $_viewDates.length; ++i) {\n                    let dayStart = $_viewDates[i];\n                    let dayEnd = addDay(cloneDate(dayStart));\n                    if (!chunk.date) {\n                        if (chunk.start < dayEnd) {\n                            // The first day is found\n                            chunk.date = dayStart;\n                            if (chunk.start < dayStart) {\n                                // Adjust chunk start\n                                chunk.start = dayStart;\n                            }\n                            ++days;\n                        }\n                    } else {\n                        if (chunk.end <= dayStart) {\n                            // Adjust chunk end\n                            chunk.end = prevDayEnd;\n                            break;\n                        }\n                        // The chunk is long one\n                        let key = dayStart.getTime();\n                        if (longChunks[key]) {\n                            longChunks[key].push(chunk);\n                        } else {\n                            longChunks[key] = [chunk];\n                        }\n                        ++days;\n                    }\n                    prevDayEnd = dayEnd;\n                }\n                chunk.days = days;\n            }\n\n            if (!chunk.date) {\n                // Chunk is outside the slot time limits, so skip it\n                continue;\n            }\n\n            if (prevChunk && datesEqual(prevChunk.date, chunk.date)) {\n                chunk.prev = prevChunk;\n            }\n            prevChunk = chunk;\n            filteredChunks.push(chunk);\n        }\n    }\n\n    return [filteredChunks, longChunks];\n}\n\nexport function repositionEvent(chunk, dayChunks, longChunks, height, allDay) {\n    chunk.top = 0;\n    chunk.bottom = height;\n    let margin = 1;\n    let key = chunk.date.getTime();\n    longChunks = longChunks?.[key] ?? [];\n    let chunks = [...dayChunks, ...longChunks];\n    chunks.sort((a, b) => (a.top ?? 0) - (b.top ?? 0) || a.start - b.start || b.event.allDay - a.event.allDay);\n    for (let dayChunk of chunks) {\n        if (dayChunk === chunk) {\n            continue;\n        }\n        if ((allDay || chunk.start < dayChunk.end && chunk.end > dayChunk.start) && chunk.top < dayChunk.bottom && chunk.bottom > dayChunk.top) {\n            let offset = dayChunk.bottom - chunk.top + 1;\n            margin += offset;\n            chunk.top += offset;\n            chunk.bottom += offset;\n        }\n    }\n\n    return margin;\n}\n\nexport function getSlotTimeLimits($_dayTimeLimits, date) {\n    return $_dayTimeLimits[date.getTime()] ?? {min: createDuration(0), max: createDuration(0)};\n}\n", "<script>\n    import {getContext} from 'svelte';\n    import {height, helperEvent, toSeconds} from '#lib';\n    import {repositionEvent} from './lib.js';\n    import {InteractableEvent} from '#components';\n\n    let {chunk, dayChunks = [], longChunks = {}, resource = undefined} = $props();\n\n    let {slotDuration, slotWidth} = getContext('state');\n\n    let el = $state();\n    let margin = $state(helperEvent(chunk.event.display) ? 1 : 0);\n    let event = $derived(chunk.event);\n    // Style\n    let width = $derived('slots' in chunk ? chunk.slots * $slotWidth : chunk.days * 100);\n    let styles = $derived(style => {\n        if ('slots' in chunk) {\n            let left = chunk.offset * $slotWidth;\n            style['left'] = `${left}px`;\n            style['width'] = `${width}px`;\n        } else {\n            // Month view\n            style['width'] = `${width}%`;\n        }\n        let marginTop = margin;\n        if (event._margin) {\n            // Force margin for helper events\n            let [_margin, _resource] = event._margin;\n            if (resource === _resource) {\n                marginTop = _margin;\n            }\n        }\n        style['margin-top'] = `${marginTop}px`;\n        return style;\n    });\n\n    export function reposition() {\n        if (!el) {\n            return 0;\n        }\n        let h = height(el);\n        margin = repositionEvent(chunk, dayChunks, longChunks, h, !toSeconds($slotDuration));\n        return margin + h;\n    }\n</script>\n\n{#if width > 0}\n    <InteractableEvent bind:el {chunk} {styles} axis=\"x\" forceMargin={() => [margin, resource]} />\n{/if}\n", "<script>\n    import {getContext} from 'svelte';\n    import {\n        addDuration, ceil, cloneDate, datesEqual, floor, max, outsideRange, rect, runReposition, setPayload, toSeconds\n    } from '#lib';\n    import {getSlotTimeLimits} from './lib.js';\n    import Event from './Event.svelte';\n\n    let {date, resource, chunks, bgChunks, longChunks, iChunks = []} = $props();\n\n    let {\n        highlightedDates, slotDuration, slotWidth, theme, validRange, _interaction, _today, _dayTimeLimits\n    } = getContext('state');\n\n    let el = $state();\n    let refs = [];\n\n    let isToday = $derived(datesEqual(date, $_today));\n    let highlight = $derived($highlightedDates.some(d => datesEqual(d, date)));\n    let disabled = $derived(outsideRange(date, $validRange));\n\n    let slotTimeLimits = $derived(getSlotTimeLimits($_dayTimeLimits, date));\n    let allDay = $derived(!toSeconds($slotDuration));\n    let pointerIdx = $derived(allDay ? 2 : 1);\n\n    let dayChunks = $derived(chunks.filter(chunkIntersects));\n    let dayBgChunks = $derived(bgChunks.filter(bgChunk => (!allDay || bgChunk.event.allDay) && chunkIntersects(bgChunk)));\n\n    function chunkIntersects(chunk) {\n        return datesEqual(chunk.date, date);\n    }\n\n    function dateFromPoint(x, y) {\n        x -= rect(el).left;\n        return {\n            allDay,\n            date: allDay\n                ? cloneDate(date)\n                : addDuration(\n                    addDuration(cloneDate(date), slotTimeLimits.min),\n                    $slotDuration,\n                    floor(x / $slotWidth)\n                ),\n            resource,\n            dayEl: el,\n            disabled\n        };\n    }\n    $effect(() => {\n        setPayload(el, dateFromPoint);\n    });\n\n    export function reposition() {\n        return max(...runReposition(refs, dayChunks));\n    }\n</script>\n\n<div\n    bind:this={el}\n    class=\"{$theme.day} {$theme.weekdays?.[date.getUTCDay()]}{isToday ? ' ' + $theme.today : ''}{highlight ? ' ' + $theme.highlight : ''}{disabled ? ' ' + $theme.disabled : ''}\"\n    style=\"flex-grow: {allDay ? null : ceil((toSeconds(slotTimeLimits.max) - toSeconds(slotTimeLimits.min)) / toSeconds($slotDuration))}\"\n    role=\"cell\"\n    onpointerdown={$_interaction.action?.select}\n>\n    <div class=\"{$theme.events}\">\n        {#if !disabled}\n            {#each dayBgChunks as chunk (chunk.event)}\n                <Event {chunk}/>\n            {/each}\n            <!-- Pointer -->\n            {#if iChunks[pointerIdx] && chunkIntersects(iChunks[pointerIdx])}\n                <Event chunk={iChunks[pointerIdx]}/>\n            {/if}\n            {#each dayChunks as chunk, i (chunk.event)}\n                <!-- svelte-ignore binding_property_non_reactive -->\n                <Event {chunk} {dayChunks} {longChunks} {resource} bind:this={refs[i]}/>\n            {/each}\n            <!-- Drag, Resize & Select -->\n            {#if iChunks[0] && chunkIntersects(iChunks[0])}\n                <Event chunk={iChunks[0]} {resource}/>\n            {/if}\n        {/if}\n    </div>\n</div>\n", "<script>\n    import {getContext} from 'svelte';\n    import {\n        addDay, addDuration, bgEvent, ceil, cloneDate, createEventChunk, DAY_IN_SECONDS, eventIntersects,\n        limitToRange, max, runReposition\n    } from '#lib';\n    import {getSlotTimeLimits, prepareEventChunks} from './lib.js';\n    import Day from './Day.svelte';\n\n    let {resource} = $props();\n\n    let {\n        _viewDates, _filteredEvents, _iEvents, _resHs, _dayTimeLimits, slotDuration, theme, validRange\n    } = getContext('state');\n\n    let refs = [];\n    let height = $state(0);\n\n    let [start, end] = $derived.by(() => {\n        let start = cloneDate(limitToRange($_viewDates[0], $validRange));\n        let end = cloneDate(limitToRange($_viewDates.at(-1), $validRange));\n        let slotTimeLimits = getSlotTimeLimits($_dayTimeLimits, start);\n        addDuration(start, slotTimeLimits.min);\n        slotTimeLimits = getSlotTimeLimits($_dayTimeLimits, end);\n        if (slotTimeLimits.max.seconds > DAY_IN_SECONDS) {\n            addDuration(end, slotTimeLimits.max)  /** @see https://github.com/vkurko/calendar/issues/333 */\n        } else {\n            addDay(end);\n        }\n        return [start, end];\n    });\n\n    let [chunks, bgChunks, longChunks] = $derived.by(() => {\n        let chunks = [];\n        let bgChunks = [];\n        let longChunks;\n        for (let event of $_filteredEvents) {\n            if (eventIntersects(event, start, end, resource)) {\n                let chunk = createEventChunk(event, start, end);\n                if (bgEvent(event.display)) {\n                    bgChunks.push(chunk);\n                } else {\n                    chunks.push(chunk);\n                }\n            }\n        }\n        [bgChunks] = prepareEventChunks(bgChunks, $_viewDates, $_dayTimeLimits, $slotDuration);\n        [chunks, longChunks] = prepareEventChunks(chunks, $_viewDates, $_dayTimeLimits, $slotDuration);\n        return [chunks, bgChunks, longChunks];\n    });\n\n    let iChunks = $derived($_iEvents.map(event => {\n        let chunk;\n        if (event && eventIntersects(event, start, end, resource)) {\n            chunk = createEventChunk(event, start, end);\n            [[chunk]] = prepareEventChunks([chunk], $_viewDates, $_dayTimeLimits, $slotDuration);\n        } else {\n            chunk = null;\n        }\n        return chunk;\n    }));\n\n    export function reposition() {\n        height = ceil(max(...runReposition(refs, $_viewDates))) + 10;\n        $_resHs.set(resource, height);\n        $_resHs = $_resHs;\n    }\n</script>\n\n<div class=\"{$theme.days}\" style=\"flex-basis: {max(height, 34)}px\" role=\"row\">\n    {#each $_viewDates as date, i}\n        <!-- svelte-ignore binding_property_non_reactive -->\n        <Day {date} {resource} {chunks} {bgChunks} {longChunks} {iChunks} bind:this={refs[i]}/>\n    {/each}\n</div>\n", "<script>\n    import {getContext, untrack} from 'svelte';\n    import {observeResize, runReposition, toSeconds} from '#lib';\n    import {getSlotTimeLimits} from './lib.js';\n    import Days from './Days.svelte';\n\n    let {_bodyEl, _bodyHeight, _bodyWidth, _bodyScrollLeft, _headerEl, _filteredEvents, _sidebarEl, _dayTimes, _dayTimeLimits,\n        _recheckScrollable, _resHs, _viewResources, _viewDates, scrollTime, slotDuration, slotWidth, theme} = getContext('state');\n\n    let refs = [];\n\n    function scrollToTime() {\n        let slotTimeLimits = getSlotTimeLimits($_dayTimeLimits, $_viewDates[0]);\n        $_bodyEl.scrollLeft = (toSeconds($scrollTime) - toSeconds(slotTimeLimits.min)) / toSeconds($slotDuration) * $slotWidth;\n        $_bodyScrollLeft = $_bodyEl.scrollLeft;\n    }\n    $effect(() => {\n        $_viewDates;\n        $scrollTime;\n        untrack(scrollToTime);\n    });\n\n    function reposition() {\n        $_resHs.clear();\n        runReposition(refs, $_viewResources);\n    }\n    $effect(() => {\n        $_filteredEvents;\n        $_viewResources;\n        untrack(reposition);\n    });\n\n    function onscroll() {\n        $_headerEl.scrollLeft = $_bodyEl.scrollLeft;\n        $_sidebarEl.scrollTop = $_bodyEl.scrollTop;\n        $_bodyScrollLeft = $_bodyEl.scrollLeft;\n    }\n\n    function onresize() {\n        $_bodyHeight = $_bodyEl.clientHeight;\n        $_bodyWidth = $_bodyEl.clientWidth;\n        $_recheckScrollable = true;\n    }\n</script>\n\n<div\n    bind:this={$_bodyEl}\n    class=\"{$theme.body}\"\n    {onscroll}\n    use:observeResize={onresize}\n>\n    <div class=\"{$theme.content}\">\n        <div class=\"{$theme.lines}\">\n            {#each $_viewDates as date}\n                {#each $_dayTimes[date.getTime()] as time}\n                    <div class=\"{$theme.line}{time[2] ? '' : ' ' + $theme.minor}\"></div>\n                {/each}\n            {/each}\n        </div>\n        {#each $_viewResources as resource, i}\n            <!-- svelte-ignore binding_property_non_reactive -->\n            <Days {resource} bind:this={refs[i]}/>\n        {/each}\n    </div>\n</div>\n\n<svelte:window on:resize={reposition}/>\n", "<script>\n    import {getContext} from 'svelte';\n    import {addDuration, cloneDate, datesEqual} from '#lib';\n    import {getSlotTimeLimits} from './lib.js';\n\n    let {slotDuration, slotWidth, theme, _bodyHeight, _bodyWidth, _bodyScrollLeft,\n        _headerHeight, _dayTimeLimits, _now, _today, _viewDates} = getContext('state');\n\n    // Style\n    let left = $derived.by(() => {\n        let offset = 0;\n        for (let i = 0; i < $_viewDates.length; ++i) {\n            let slotTimeLimits = getSlotTimeLimits($_dayTimeLimits, $_viewDates[i]);\n            if (datesEqual($_viewDates[i], $_today)) {\n                let dayStart = addDuration(cloneDate($_viewDates[i]), slotTimeLimits.min);\n                let dayEnd = addDuration(cloneDate($_viewDates[i]), slotTimeLimits.max);\n                if ($_now >= dayStart && $_now <= dayEnd) {\n                    offset += ($_now - dayStart) / 1000;\n                    break;\n                } else {\n                    return null;\n                }\n            } else {\n                offset += slotTimeLimits.max.seconds - slotTimeLimits.min.seconds;\n            }\n        }\n        let step = $slotDuration.seconds;\n        return offset / step * $slotWidth - $_bodyScrollLeft;\n    });\n</script>\n\n{#if left !== null && left >= 3 && left <= $_bodyWidth - 3}\n    <div\n        class=\"{$theme.nowIndicator}\"\n        style:top=\"{$_headerHeight+2}px\"\n        style:left=\"{left}px\"\n        style:height=\"{$_bodyHeight-1}px\"\n    ></div>\n{/if}\n", "<script>\n    import {getContext} from 'svelte';\n    import Sidebar from './Sidebar.svelte';\n    import Header from './Header.svelte';\n    import Body from './Body.svelte';\n    import NowIndicator from './NowIndicator.svelte';\n\n    let {nowIndicator, theme} = getContext('state');\n</script>\n\n<div class=\"{$theme.container}\">\n    <Sidebar/>\n    <div class=\"{$theme.main}\">\n        <Header/>\n        <Body/>\n        {#if $nowIndicator}\n            <NowIndicator/>\n        {/if}\n    </div>\n</div>\n", "import {writable} from 'svelte/store';\nimport {btnTextDay, btnTextMonth, btnTextWeek, themeView, viewResources} from '#lib';\nimport {dayTimeLimits, dayTimes, nestedResources} from './stores.js';\nimport View from './View.svelte';\n\nexport default {\n\tcreateOptions(options) {\n\t\t// Common options\n\t\toptions.buttonText.resourceTimelineDay = 'timeline';\n\t\toptions.buttonText.resourceTimelineWeek = 'timeline';\n\t\toptions.buttonText.resourceTimelineMonth = 'timeline';\n\t\toptions.theme.expander = 'ec-expander';\n\t\toptions.theme.main = 'ec-main';\n\t\toptions.theme.times = 'ec-times';\n\t\toptions.theme.container = 'ec-container';\n\t\toptions.view = 'resourceTimelineWeek';\n\t\toptions.views.resourceTimelineDay = {\n\t\t\tbuttonText: btnTextDay,\n\t\t\tcomponent: View,\n\t\t\tdisplayEventEnd: false,\n\t\t\tdayHeaderFormat: {weekday: 'long'},\n\t\t\tduration: {days: 1},\n\t\t\tslotDuration: '01:00',\n\t\t\ttheme: themeView('ec-timeline ec-resource-day-view'),\n\t\t\ttitleFormat: {year: 'numeric', month: 'long', day: 'numeric'}\n\t\t};\n\t\toptions.views.resourceTimelineWeek = {\n\t\t\tbuttonText: btnTextWeek,\n\t\t\tcomponent: View,\n\t\t\tdisplayEventEnd: false,\n\t\t\tduration: {weeks: 1},\n\t\t\tslotDuration: '01:00',\n\t\t\ttheme: themeView('ec-timeline ec-resource-week-view')\n\t\t};\n\t\toptions.views.resourceTimelineMonth = {\n\t\t\tbuttonText: btnTextMonth,\n\t\t\tcomponent: View,\n\t\t\tdisplayEventEnd: false,\n\t\t\tdayHeaderFormat: {\n\t\t\t\tweekday: 'short',\n\t\t\t\tday: 'numeric'\n\t\t\t},\n\t\t\tduration: {months: 1},\n\t\t\tslotDuration: {days: 1},\n\t\t\ttheme: themeView('ec-timeline ec-resource-month-view'),\n\t\t\ttitleFormat: {year: 'numeric', month: 'long'}\n\t\t};\n\t},\n\n\tcreateStores(state) {\n\t\tif (!('_viewResources' in state)) {\n\t\t\tstate._viewResources = viewResources(state);\n\t\t}\n\t\tstate._bodyHeight = writable(0);\n\t\tstate._bodyWidth = writable(0);\n\t\tstate._bodyScrollLeft = writable(0);\n\t\tstate._headerEl = writable(undefined);\n\t\tstate._headerHeight = writable(0);\n\t\tstate._dayTimeLimits = dayTimeLimits(state);  // flexible time limits per day\n\t\tstate._dayTimes = dayTimes(state);\n\t\tstate._nestedResources = nestedResources(state);\n\t\tstate._resHs = writable(new Map());  // resource row heights\n\t\tstate._sidebarEl = writable(undefined);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["content", "entries", "diff", "assign", "noop", "event", "tag", "root", "event", "view", "assign", "event", "assign", "height", "text", "view", "event", "intl", "state", "event", "times", "min", "max", "event", "days", "diff", "state", "date", "get", "set", "events", "assign", "view", "event", "index", "get", "view", "component", "set", "state", "view", "today", "date", "$$anchor", "sections", "$$anchor", "$$anchor", "state", "height", "view", "assign", "event", "get", "View", "state", "days", "max", "$$anchor", "event", "display", "onclick", "$$anchor", "event", "_a", "_b", "Resizer", "event", "$$anchor", "dayChunks", "moreLink", "text", "assign", "weekNumber", "$$anchor", "i", "chunks", "bgChunks", "event", "longChunks", "i", "days", "weeks", "$$anchor", "i", "state", "event", "view", "action", "event", "assign", "allDay", "date", "resource", "noop", "event", "event", "component", "Auxiliary", "state", "Auxiliary_default", "Event", "chunks", "event", "Day", "$$anchor", "noEvents", "event", "$$anchor", "View_default", "state", "state", "text", "$$anchor", "$$anchor", "height", "chunks", "bgChunks", "event", "Day", "$$anchor", "event", "Day", "$$anchor", "i", "chunks", "bgChunks", "event", "longChunks", "i", "$$anchor", "View_default", "state", "$$anchor", "View_default", "state", "state", "dayTimeLimits", "dayTimes", "onclick", "child", "payload", "$$anchor", "$$anchor", "$$anchor", "prepareEventChunks", "slotTimeLimits", "days", "repositionEvent", "height", "event", "repositionEvent", "slotTimeLimits", "Day", "$$anchor", "i", "height", "start", "end", "slotTimeLimits", "chunks", "bgChunks", "longChunks", "event", "prepareEventChunks", "$$anchor", "i", "slotTimeLimits", "$$anchor", "i", "slotTimeLimits", "View_default", "state"]
}
